function InfoBox(t) {
    t = t || {}, google.maps.OverlayView.apply(this, arguments), this.content_ = t.content || "", 
    this.disableAutoPan_ = t.disableAutoPan || !1, this.maxWidth_ = t.maxWidth || 0, 
    this.pixelOffset_ = t.pixelOffset || new google.maps.Size(0, 0), this.position_ = t.position || new google.maps.LatLng(0, 0), 
    this.zIndex_ = t.zIndex || null, this.boxClass_ = t.boxClass || "infoBox", this.boxStyle_ = t.boxStyle || {}, 
    this.closeBoxMargin_ = t.closeBoxMargin || "2px", this.closeBoxURL_ = t.closeBoxURL || "http://www.google.com/intl/en_us/mapfiles/close.gif", 
    "" === t.closeBoxURL && (this.closeBoxURL_ = ""), this.infoBoxClearance_ = t.infoBoxClearance || new google.maps.Size(1, 1), 
    void 0 === t.visible && (void 0 === t.isHidden ? t.visible = !0 : t.visible = !t.isHidden), 
    this.isHidden_ = !t.visible, this.alignBottom_ = t.alignBottom || !1, this.pane_ = t.pane || "floatPane", 
    this.enableEventPropagation_ = t.enableEventPropagation || !1, this.div_ = null, 
    this.closeListener_ = null, this.moveListener_ = null, this.contextListener_ = null, 
    this.eventListeners_ = null, this.fixedWidthSet_ = null;
}

if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");

+function(t) {
    var e = jQuery.fn.jquery.split(" ")[0].split(".");
    if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || e[0] >= 4) throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
}(), function() {
    "function" == typeof Symbol && Symbol.iterator, function() {
        function t(t, e) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), 
                Object.defineProperty(t, n.key, n);
            }
        }
    }(), function(t) {
        function e(t) {
            return {}.toString.call(t).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
        }
        function i(t) {
            return (t[0] || t).nodeType;
        }
        function n() {
            return {
                bindType: r.end,
                delegateType: r.end,
                handle: function(e) {
                    if (t(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
                }
            };
        }
        function s() {
            if (window.QUnit) return !1;
            var t = document.createElement("bootstrap");
            for (var e in a) if (void 0 !== t.style[e]) return {
                end: a[e]
            };
            return !1;
        }
        function o(e) {
            var i = this, n = !1;
            return t(this).one(h.TRANSITION_END, function() {
                n = !0;
            }), setTimeout(function() {
                n || h.triggerTransitionEnd(i);
            }, e), this;
        }
        var r = !1, a = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        }, h = {
            TRANSITION_END: "bsTransitionEnd",
            getUID: function(t) {
                do {
                    t += ~~(1e6 * Math.random());
                } while (document.getElementById(t));
                return t;
            },
            getSelectorFromElement: function(t) {
                var e = t.getAttribute("data-target");
                return e || (e = t.getAttribute("href") || "", e = /^#[a-z]/i.test(e) ? e : null), 
                e;
            },
            reflow: function(t) {
                return t.offsetHeight;
            },
            triggerTransitionEnd: function(e) {
                t(e).trigger(r.end);
            },
            supportsTransitionEnd: function() {
                return Boolean(r);
            },
            typeCheckConfig: function(t, n, s) {
                for (var o in s) if (s.hasOwnProperty(o)) {
                    var r = s[o], a = n[o], h = a && i(a) ? "element" : e(a);
                    if (!new RegExp(r).test(h)) throw new Error(t.toUpperCase() + ': Option "' + o + '" provided type "' + h + '" but expected type "' + r + '".');
                }
            }
        };
        r = s(), t.fn.emulateTransitionEnd = o, h.supportsTransitionEnd() && (t.event.special[h.TRANSITION_END] = n());
    }(jQuery);
}(), InfoBox.prototype = new google.maps.OverlayView(), InfoBox.prototype.createInfoBoxDiv_ = function() {
    var t, e, i, n = this, s = function(t) {
        t.cancelBubble = !0, t.stopPropagation && t.stopPropagation();
    };
    if (!this.div_) {
        if (this.div_ = document.createElement("div"), this.setBoxStyle_(), void 0 === this.content_.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + this.content_ : (this.div_.innerHTML = this.getCloseBoxImg_(), 
        this.div_.appendChild(this.content_)), this.getPanes()[this.pane_].appendChild(this.div_), 
        this.addClickHandler_(), this.div_.style.width ? this.fixedWidthSet_ = !0 : 0 !== this.maxWidth_ && this.div_.offsetWidth > this.maxWidth_ ? (this.div_.style.width = this.maxWidth_, 
        this.div_.style.overflow = "auto", this.fixedWidthSet_ = !0) : (i = this.getBoxWidths_(), 
        this.div_.style.width = this.div_.offsetWidth - i.left - i.right + "px", this.fixedWidthSet_ = !1), 
        this.panBox_(this.disableAutoPan_), !this.enableEventPropagation_) {
            for (this.eventListeners_ = [], e = [ "mousedown", "mouseover", "mouseout", "mouseup", "click", "dblclick", "touchstart", "touchend", "touchmove" ], 
            t = 0; t < e.length; t++) this.eventListeners_.push(google.maps.event.addDomListener(this.div_, e[t], s));
            this.eventListeners_.push(google.maps.event.addDomListener(this.div_, "mouseover", function(t) {
                this.style.cursor = "default";
            }));
        }
        this.contextListener_ = google.maps.event.addDomListener(this.div_, "contextmenu", function(t) {
            t.returnValue = !1, t.preventDefault && t.preventDefault(), n.enableEventPropagation_ || s(t);
        }), google.maps.event.trigger(this, "domready");
    }
}, InfoBox.prototype.getCloseBoxImg_ = function() {
    var t = "";
    return "" !== this.closeBoxURL_ && (t = "<img", t += " src='" + this.closeBoxURL_ + "'", 
    t += " align=right", t += " style='", t += " position: relative;", t += " cursor: pointer;", 
    t += " margin: " + this.closeBoxMargin_ + ";", t += "'>"), t;
}, InfoBox.prototype.addClickHandler_ = function() {
    var t;
    "" !== this.closeBoxURL_ ? (t = this.div_.firstChild, this.closeListener_ = google.maps.event.addDomListener(t, "click", this.getCloseClickHandler_())) : this.closeListener_ = null;
}, InfoBox.prototype.getCloseClickHandler_ = function() {
    var t = this;
    return function(e) {
        e.cancelBubble = !0, e.stopPropagation && e.stopPropagation(), google.maps.event.trigger(t, "closeclick"), 
        t.close();
    };
}, InfoBox.prototype.panBox_ = function(t) {
    var e, i = 0, n = 0;
    if (!t && (e = this.getMap()) instanceof google.maps.Map) {
        e.getBounds().contains(this.position_) || e.setCenter(this.position_), e.getBounds();
        var s = e.getDiv(), o = s.offsetWidth, r = s.offsetHeight, a = this.pixelOffset_.width, h = this.pixelOffset_.height, d = this.div_.offsetWidth, l = this.div_.offsetHeight, u = this.infoBoxClearance_.width, c = this.infoBoxClearance_.height, p = this.getProjection().fromLatLngToContainerPixel(this.position_);
        if (p.x < -a + u ? i = p.x + a - u : p.x + d + a + u > o && (i = p.x + d + a + u - o), 
        this.alignBottom_ ? p.y < -h + c + l ? n = p.y + h - c - l : p.y + h + c > r && (n = p.y + h + c - r) : p.y < -h + c ? n = p.y + h - c : p.y + l + h + c > r && (n = p.y + l + h + c - r), 
        0 !== i || 0 !== n) {
            e.getCenter();
            e.panBy(i, n);
        }
    }
}, InfoBox.prototype.setBoxStyle_ = function() {
    var t, e;
    if (this.div_) {
        this.div_.className = this.boxClass_, this.div_.style.cssText = "", e = this.boxStyle_;
        for (t in e) e.hasOwnProperty(t) && (this.div_.style[t] = e[t]);
        this.div_.style.WebkitTransform = "translateZ(0)", void 0 !== this.div_.style.opacity && "" !== this.div_.style.opacity && (this.div_.style.MsFilter = '"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + 100 * this.div_.style.opacity + ')"', 
        this.div_.style.filter = "alpha(opacity=" + 100 * this.div_.style.opacity + ")"), 
        this.div_.style.position = "absolute", this.div_.style.visibility = "hidden", null !== this.zIndex_ && (this.div_.style.zIndex = this.zIndex_);
    }
}, InfoBox.prototype.getBoxWidths_ = function() {
    var t, e = {
        top: 0,
        bottom: 0,
        left: 0,
        right: 0
    }, i = this.div_;
    return document.defaultView && document.defaultView.getComputedStyle ? (t = i.ownerDocument.defaultView.getComputedStyle(i, "")) && (e.top = parseInt(t.borderTopWidth, 10) || 0, 
    e.bottom = parseInt(t.borderBottomWidth, 10) || 0, e.left = parseInt(t.borderLeftWidth, 10) || 0, 
    e.right = parseInt(t.borderRightWidth, 10) || 0) : document.documentElement.currentStyle && i.currentStyle && (e.top = parseInt(i.currentStyle.borderTopWidth, 10) || 0, 
    e.bottom = parseInt(i.currentStyle.borderBottomWidth, 10) || 0, e.left = parseInt(i.currentStyle.borderLeftWidth, 10) || 0, 
    e.right = parseInt(i.currentStyle.borderRightWidth, 10) || 0), e;
}, InfoBox.prototype.onRemove = function() {
    this.div_ && (this.div_.parentNode.removeChild(this.div_), this.div_ = null);
}, InfoBox.prototype.draw = function() {
    this.createInfoBoxDiv_();
    var t = this.getProjection().fromLatLngToDivPixel(this.position_);
    this.div_.style.left = t.x + this.pixelOffset_.width + "px", this.alignBottom_ ? this.div_.style.bottom = -(t.y + this.pixelOffset_.height) + "px" : this.div_.style.top = t.y + this.pixelOffset_.height + "px", 
    this.isHidden_ ? this.div_.style.visibility = "hidden" : this.div_.style.visibility = "visible";
}, InfoBox.prototype.setOptions = function(t) {
    void 0 !== t.boxClass && (this.boxClass_ = t.boxClass, this.setBoxStyle_()), void 0 !== t.boxStyle && (this.boxStyle_ = t.boxStyle, 
    this.setBoxStyle_()), void 0 !== t.content && this.setContent(t.content), void 0 !== t.disableAutoPan && (this.disableAutoPan_ = t.disableAutoPan), 
    void 0 !== t.maxWidth && (this.maxWidth_ = t.maxWidth), void 0 !== t.pixelOffset && (this.pixelOffset_ = t.pixelOffset), 
    void 0 !== t.alignBottom && (this.alignBottom_ = t.alignBottom), void 0 !== t.position && this.setPosition(t.position), 
    void 0 !== t.zIndex && this.setZIndex(t.zIndex), void 0 !== t.closeBoxMargin && (this.closeBoxMargin_ = t.closeBoxMargin), 
    void 0 !== t.closeBoxURL && (this.closeBoxURL_ = t.closeBoxURL), void 0 !== t.infoBoxClearance && (this.infoBoxClearance_ = t.infoBoxClearance), 
    void 0 !== t.isHidden && (this.isHidden_ = t.isHidden), void 0 !== t.visible && (this.isHidden_ = !t.visible), 
    void 0 !== t.enableEventPropagation && (this.enableEventPropagation_ = t.enableEventPropagation), 
    this.div_ && this.draw();
}, InfoBox.prototype.setContent = function(t) {
    this.content_ = t, this.div_ && (this.closeListener_ && (google.maps.event.removeListener(this.closeListener_), 
    this.closeListener_ = null), this.fixedWidthSet_ || (this.div_.style.width = ""), 
    void 0 === t.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + t : (this.div_.innerHTML = this.getCloseBoxImg_(), 
    this.div_.appendChild(t)), this.fixedWidthSet_ || (this.div_.style.width = this.div_.offsetWidth + "px", 
    void 0 === t.nodeType ? this.div_.innerHTML = this.getCloseBoxImg_() + t : (this.div_.innerHTML = this.getCloseBoxImg_(), 
    this.div_.appendChild(t))), this.addClickHandler_()), google.maps.event.trigger(this, "content_changed");
}, InfoBox.prototype.setPosition = function(t) {
    this.position_ = t, this.div_ && this.draw(), google.maps.event.trigger(this, "position_changed");
}, InfoBox.prototype.setZIndex = function(t) {
    this.zIndex_ = t, this.div_ && (this.div_.style.zIndex = t), google.maps.event.trigger(this, "zindex_changed");
}, InfoBox.prototype.setVisible = function(t) {
    this.isHidden_ = !t, this.div_ && (this.div_.style.visibility = this.isHidden_ ? "hidden" : "visible");
}, InfoBox.prototype.getContent = function() {
    return this.content_;
}, InfoBox.prototype.getPosition = function() {
    return this.position_;
}, InfoBox.prototype.getZIndex = function() {
    return this.zIndex_;
}, InfoBox.prototype.getVisible = function() {
    return void 0 !== this.getMap() && null !== this.getMap() && !this.isHidden_;
}, InfoBox.prototype.show = function() {
    this.isHidden_ = !1, this.div_ && (this.div_.style.visibility = "visible");
}, InfoBox.prototype.hide = function() {
    this.isHidden_ = !0, this.div_ && (this.div_.style.visibility = "hidden");
}, InfoBox.prototype.open = function(t, e) {
    var i = this;
    e && (this.position_ = e.getPosition(), this.moveListener_ = google.maps.event.addListener(e, "position_changed", function() {
        i.setPosition(this.getPosition());
    })), this.setMap(t), this.div_ && this.panBox_();
}, InfoBox.prototype.close = function() {
    var t;
    if (this.closeListener_ && (google.maps.event.removeListener(this.closeListener_), 
    this.closeListener_ = null), this.eventListeners_) {
        for (t = 0; t < this.eventListeners_.length; t++) google.maps.event.removeListener(this.eventListeners_[t]);
        this.eventListeners_ = null;
    }
    this.moveListener_ && (google.maps.event.removeListener(this.moveListener_), this.moveListener_ = null), 
    this.contextListener_ && (google.maps.event.removeListener(this.contextListener_), 
    this.contextListener_ = null), this.setMap(null);
}, function(t, e) {
    "use strict";
    "function" == typeof define && define.amd ? define("jquery-bridget/jquery-bridget", [ "jquery" ], function(i) {
        e(t, i);
    }) : "object" == typeof module && module.exports ? module.exports = e(t, require("jquery")) : t.jQueryBridget = e(t, t.jQuery);
}(window, function(t, e) {
    "use strict";
    function i(i, o, a) {
        function h(t, e, n) {
            var s, o = "$()." + i + '("' + e + '")';
            return t.each(function(t, h) {
                var d = a.data(h, i);
                if (d) {
                    var l = d[e];
                    if (l && "_" != e.charAt(0)) {
                        var u = l.apply(d, n);
                        s = void 0 === s ? u : s;
                    } else r(o + " is not a valid method");
                } else r(i + " not initialized. Cannot call methods, i.e. " + o);
            }), void 0 !== s ? s : t;
        }
        function d(t, e) {
            t.each(function(t, n) {
                var s = a.data(n, i);
                s ? (s.option(e), s._init()) : (s = new o(n, e), a.data(n, i, s));
            });
        }
        (a = a || e || t.jQuery) && (o.prototype.option || (o.prototype.option = function(t) {
            a.isPlainObject(t) && (this.options = a.extend(!0, this.options, t));
        }), a.fn[i] = function(t) {
            return "string" == typeof t ? h(this, t, s.call(arguments, 1)) : (d(this, t), this);
        }, n(a));
    }
    function n(t) {
        !t || t && t.bridget || (t.bridget = i);
    }
    var s = Array.prototype.slice, o = t.console, r = void 0 === o ? function() {} : function(t) {
        o.error(t);
    };
    return n(e || t.jQuery), i;
}), function(t, e) {
    "function" == typeof define && define.amd ? define("ev-emitter/ev-emitter", e) : "object" == typeof module && module.exports ? module.exports = e() : t.EvEmitter = e();
}("undefined" != typeof window ? window : this, function() {
    function t() {}
    var e = t.prototype;
    return e.on = function(t, e) {
        if (t && e) {
            var i = this._events = this._events || {}, n = i[t] = i[t] || [];
            return -1 == n.indexOf(e) && n.push(e), this;
        }
    }, e.once = function(t, e) {
        if (t && e) {
            this.on(t, e);
            var i = this._onceEvents = this._onceEvents || {};
            return (i[t] = i[t] || {})[e] = !0, this;
        }
    }, e.off = function(t, e) {
        var i = this._events && this._events[t];
        if (i && i.length) {
            var n = i.indexOf(e);
            return -1 != n && i.splice(n, 1), this;
        }
    }, e.emitEvent = function(t, e) {
        var i = this._events && this._events[t];
        if (i && i.length) {
            var n = 0, s = i[n];
            e = e || [];
            for (var o = this._onceEvents && this._onceEvents[t]; s; ) {
                var r = o && o[s];
                r && (this.off(t, s), delete o[s]), s.apply(this, e), s = i[n += r ? 0 : 1];
            }
            return this;
        }
    }, t;
}), function(t, e) {
    "use strict";
    "function" == typeof define && define.amd ? define("get-size/get-size", [], function() {
        return e();
    }) : "object" == typeof module && module.exports ? module.exports = e() : t.getSize = e();
}(window, function() {
    "use strict";
    function t(t) {
        var e = parseFloat(t);
        return -1 == t.indexOf("%") && !isNaN(e) && e;
    }
    function e() {
        for (var t = {
            width: 0,
            height: 0,
            innerWidth: 0,
            innerHeight: 0,
            outerWidth: 0,
            outerHeight: 0
        }, e = 0; h > e; e++) t[a[e]] = 0;
        return t;
    }
    function i(t) {
        var e = getComputedStyle(t);
        return e || r("Style returned " + e + ". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"), 
        e;
    }
    function n() {
        if (!d) {
            d = !0;
            var e = document.createElement("div");
            e.style.width = "200px", e.style.padding = "1px 2px 3px 4px", e.style.borderStyle = "solid", 
            e.style.borderWidth = "1px 2px 3px 4px", e.style.boxSizing = "border-box";
            var n = document.body || document.documentElement;
            n.appendChild(e);
            var r = i(e);
            s.isBoxSizeOuter = o = 200 == t(r.width), n.removeChild(e);
        }
    }
    function s(s) {
        if (n(), "string" == typeof s && (s = document.querySelector(s)), s && "object" == typeof s && s.nodeType) {
            var r = i(s);
            if ("none" == r.display) return e();
            var d = {};
            d.width = s.offsetWidth, d.height = s.offsetHeight;
            for (var l = d.isBorderBox = "border-box" == r.boxSizing, u = 0; h > u; u++) {
                var c = a[u], p = r[c], f = parseFloat(p);
                d[c] = isNaN(f) ? 0 : f;
            }
            var g = d.paddingLeft + d.paddingRight, m = d.paddingTop + d.paddingBottom, v = d.marginLeft + d.marginRight, y = d.marginTop + d.marginBottom, _ = d.borderLeftWidth + d.borderRightWidth, x = d.borderTopWidth + d.borderBottomWidth, w = l && o, b = t(r.width);
            !1 !== b && (d.width = b + (w ? 0 : g + _));
            var S = t(r.height);
            return !1 !== S && (d.height = S + (w ? 0 : m + x)), d.innerWidth = d.width - (g + _), 
            d.innerHeight = d.height - (m + x), d.outerWidth = d.width + v, d.outerHeight = d.height + y, 
            d;
        }
    }
    var o, r = "undefined" == typeof console ? function() {} : function(t) {
        console.error(t);
    }, a = [ "paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth" ], h = a.length, d = !1;
    return s;
}), function(t, e) {
    "use strict";
    "function" == typeof define && define.amd ? define("desandro-matches-selector/matches-selector", e) : "object" == typeof module && module.exports ? module.exports = e() : t.matchesSelector = e();
}(window, function() {
    "use strict";
    var t = function() {
        var t = Element.prototype;
        if (t.matches) return "matches";
        if (t.matchesSelector) return "matchesSelector";
        for (var e = [ "webkit", "moz", "ms", "o" ], i = 0; i < e.length; i++) {
            var n = e[i] + "MatchesSelector";
            if (t[n]) return n;
        }
    }();
    return function(e, i) {
        return e[t](i);
    };
}), function(t, e) {
    "function" == typeof define && define.amd ? define("fizzy-ui-utils/utils", [ "desandro-matches-selector/matches-selector" ], function(i) {
        return e(t, i);
    }) : "object" == typeof module && module.exports ? module.exports = e(t, require("desandro-matches-selector")) : t.fizzyUIUtils = e(t, t.matchesSelector);
}(window, function(t, e) {
    var i = {};
    i.extend = function(t, e) {
        for (var i in e) t[i] = e[i];
        return t;
    }, i.modulo = function(t, e) {
        return (t % e + e) % e;
    }, i.makeArray = function(t) {
        var e = [];
        if (Array.isArray(t)) e = t; else if (t && "number" == typeof t.length) for (var i = 0; i < t.length; i++) e.push(t[i]); else e.push(t);
        return e;
    }, i.removeFrom = function(t, e) {
        var i = t.indexOf(e);
        -1 != i && t.splice(i, 1);
    }, i.getParent = function(t, i) {
        for (;t != document.body; ) if (t = t.parentNode, e(t, i)) return t;
    }, i.getQueryElement = function(t) {
        return "string" == typeof t ? document.querySelector(t) : t;
    }, i.handleEvent = function(t) {
        var e = "on" + t.type;
        this[e] && this[e](t);
    }, i.filterFindElements = function(t, n) {
        var s = [];
        return (t = i.makeArray(t)).forEach(function(t) {
            if (t instanceof HTMLElement) {
                if (!n) return void s.push(t);
                e(t, n) && s.push(t);
                for (var i = t.querySelectorAll(n), o = 0; o < i.length; o++) s.push(i[o]);
            }
        }), s;
    }, i.debounceMethod = function(t, e, i) {
        var n = t.prototype[e], s = e + "Timeout";
        t.prototype[e] = function() {
            var t = this[s];
            t && clearTimeout(t);
            var e = arguments, o = this;
            this[s] = setTimeout(function() {
                n.apply(o, e), delete o[s];
            }, i || 100);
        };
    }, i.docReady = function(t) {
        var e = document.readyState;
        "complete" == e || "interactive" == e ? t() : document.addEventListener("DOMContentLoaded", t);
    }, i.toDashed = function(t) {
        return t.replace(/(.)([A-Z])/g, function(t, e, i) {
            return e + "-" + i;
        }).toLowerCase();
    };
    var n = t.console;
    return i.htmlInit = function(e, s) {
        i.docReady(function() {
            var o = i.toDashed(s), r = "data-" + o, a = document.querySelectorAll("[" + r + "]"), h = document.querySelectorAll(".js-" + o), d = i.makeArray(a).concat(i.makeArray(h)), l = r + "-options", u = t.jQuery;
            d.forEach(function(t) {
                var i, o = t.getAttribute(r) || t.getAttribute(l);
                try {
                    i = o && JSON.parse(o);
                } catch (e) {
                    return void (n && n.error("Error parsing " + r + " on " + t.className + ": " + e));
                }
                var a = new e(t, i);
                u && u.data(t, s, a);
            });
        });
    }, i;
}), function(t, e) {
    "function" == typeof define && define.amd ? define("outlayer/item", [ "ev-emitter/ev-emitter", "get-size/get-size" ], e) : "object" == typeof module && module.exports ? module.exports = e(require("ev-emitter"), require("get-size")) : (t.Outlayer = {}, 
    t.Outlayer.Item = e(t.EvEmitter, t.getSize));
}(window, function(t, e) {
    "use strict";
    function i(t) {
        for (var e in t) return !1;
        return null, !0;
    }
    function n(t, e) {
        t && (this.element = t, this.layout = e, this.position = {
            x: 0,
            y: 0
        }, this._create());
    }
    var s = document.documentElement.style, o = "string" == typeof s.transition ? "transition" : "WebkitTransition", r = "string" == typeof s.transform ? "transform" : "WebkitTransform", a = {
        WebkitTransition: "webkitTransitionEnd",
        transition: "transitionend"
    }[o], h = {
        transform: r,
        transition: o,
        transitionDuration: o + "Duration",
        transitionProperty: o + "Property",
        transitionDelay: o + "Delay"
    }, d = n.prototype = Object.create(t.prototype);
    d.constructor = n, d._create = function() {
        this._transn = {
            ingProperties: {},
            clean: {},
            onEnd: {}
        }, this.css({
            position: "absolute"
        });
    }, d.handleEvent = function(t) {
        var e = "on" + t.type;
        this[e] && this[e](t);
    }, d.getSize = function() {
        this.size = e(this.element);
    }, d.css = function(t) {
        var e = this.element.style;
        for (var i in t) e[h[i] || i] = t[i];
    }, d.getPosition = function() {
        var t = getComputedStyle(this.element), e = this.layout._getOption("originLeft"), i = this.layout._getOption("originTop"), n = t[e ? "left" : "right"], s = t[i ? "top" : "bottom"], o = this.layout.size, r = -1 != n.indexOf("%") ? parseFloat(n) / 100 * o.width : parseInt(n, 10), a = -1 != s.indexOf("%") ? parseFloat(s) / 100 * o.height : parseInt(s, 10);
        r = isNaN(r) ? 0 : r, a = isNaN(a) ? 0 : a, r -= e ? o.paddingLeft : o.paddingRight, 
        a -= i ? o.paddingTop : o.paddingBottom, this.position.x = r, this.position.y = a;
    }, d.layoutPosition = function() {
        var t = this.layout.size, e = {}, i = this.layout._getOption("originLeft"), n = this.layout._getOption("originTop"), s = i ? "paddingLeft" : "paddingRight", o = i ? "left" : "right", r = i ? "right" : "left", a = this.position.x + t[s];
        e[o] = this.getXValue(a), e[r] = "";
        var h = n ? "paddingTop" : "paddingBottom", d = n ? "top" : "bottom", l = n ? "bottom" : "top", u = this.position.y + t[h];
        e[d] = this.getYValue(u), e[l] = "", this.css(e), this.emitEvent("layout", [ this ]);
    }, d.getXValue = function(t) {
        var e = this.layout._getOption("horizontal");
        return this.layout.options.percentPosition && !e ? t / this.layout.size.width * 100 + "%" : t + "px";
    }, d.getYValue = function(t) {
        var e = this.layout._getOption("horizontal");
        return this.layout.options.percentPosition && e ? t / this.layout.size.height * 100 + "%" : t + "px";
    }, d._transitionTo = function(t, e) {
        this.getPosition();
        var i = this.position.x, n = this.position.y, s = parseInt(t, 10), o = parseInt(e, 10), r = s === this.position.x && o === this.position.y;
        if (this.setPosition(t, e), !r || this.isTransitioning) {
            var a = t - i, h = e - n, d = {};
            d.transform = this.getTranslate(a, h), this.transition({
                to: d,
                onTransitionEnd: {
                    transform: this.layoutPosition
                },
                isCleaning: !0
            });
        } else this.layoutPosition();
    }, d.getTranslate = function(t, e) {
        var i = this.layout._getOption("originLeft"), n = this.layout._getOption("originTop");
        return t = i ? t : -t, e = n ? e : -e, "translate3d(" + t + "px, " + e + "px, 0)";
    }, d.goTo = function(t, e) {
        this.setPosition(t, e), this.layoutPosition();
    }, d.moveTo = d._transitionTo, d.setPosition = function(t, e) {
        this.position.x = parseInt(t, 10), this.position.y = parseInt(e, 10);
    }, d._nonTransition = function(t) {
        this.css(t.to), t.isCleaning && this._removeStyles(t.to);
        for (var e in t.onTransitionEnd) t.onTransitionEnd[e].call(this);
    }, d.transition = function(t) {
        if (parseFloat(this.layout.options.transitionDuration)) {
            var e = this._transn;
            for (var i in t.onTransitionEnd) e.onEnd[i] = t.onTransitionEnd[i];
            for (i in t.to) e.ingProperties[i] = !0, t.isCleaning && (e.clean[i] = !0);
            if (t.from) {
                this.css(t.from);
                this.element.offsetHeight;
                null;
            }
            this.enableTransition(t.to), this.css(t.to), this.isTransitioning = !0;
        } else this._nonTransition(t);
    };
    var l = "opacity," + function(t) {
        return t.replace(/([A-Z])/g, function(t) {
            return "-" + t.toLowerCase();
        });
    }(r);
    d.enableTransition = function() {
        if (!this.isTransitioning) {
            var t = this.layout.options.transitionDuration;
            t = "number" == typeof t ? t + "ms" : t, this.css({
                transitionProperty: l,
                transitionDuration: t,
                transitionDelay: this.staggerDelay || 0
            }), this.element.addEventListener(a, this, !1);
        }
    }, d.onwebkitTransitionEnd = function(t) {
        this.ontransitionend(t);
    }, d.onotransitionend = function(t) {
        this.ontransitionend(t);
    };
    var u = {
        "-webkit-transform": "transform"
    };
    d.ontransitionend = function(t) {
        if (t.target === this.element) {
            var e = this._transn, n = u[t.propertyName] || t.propertyName;
            delete e.ingProperties[n], i(e.ingProperties) && this.disableTransition(), n in e.clean && (this.element.style[t.propertyName] = "", 
            delete e.clean[n]), n in e.onEnd && (e.onEnd[n].call(this), delete e.onEnd[n]), 
            this.emitEvent("transitionEnd", [ this ]);
        }
    }, d.disableTransition = function() {
        this.removeTransitionStyles(), this.element.removeEventListener(a, this, !1), this.isTransitioning = !1;
    }, d._removeStyles = function(t) {
        var e = {};
        for (var i in t) e[i] = "";
        this.css(e);
    };
    var c = {
        transitionProperty: "",
        transitionDuration: "",
        transitionDelay: ""
    };
    return d.removeTransitionStyles = function() {
        this.css(c);
    }, d.stagger = function(t) {
        t = isNaN(t) ? 0 : t, this.staggerDelay = t + "ms";
    }, d.removeElem = function() {
        this.element.parentNode.removeChild(this.element), this.css({
            display: ""
        }), this.emitEvent("remove", [ this ]);
    }, d.remove = function() {
        return o && parseFloat(this.layout.options.transitionDuration) ? (this.once("transitionEnd", function() {
            this.removeElem();
        }), void this.hide()) : void this.removeElem();
    }, d.reveal = function() {
        delete this.isHidden, this.css({
            display: ""
        });
        var t = this.layout.options, e = {};
        e[this.getHideRevealTransitionEndProperty("visibleStyle")] = this.onRevealTransitionEnd, 
        this.transition({
            from: t.hiddenStyle,
            to: t.visibleStyle,
            isCleaning: !0,
            onTransitionEnd: e
        });
    }, d.onRevealTransitionEnd = function() {
        this.isHidden || this.emitEvent("reveal");
    }, d.getHideRevealTransitionEndProperty = function(t) {
        var e = this.layout.options[t];
        if (e.opacity) return "opacity";
        for (var i in e) return i;
    }, d.hide = function() {
        this.isHidden = !0, this.css({
            display: ""
        });
        var t = this.layout.options, e = {};
        e[this.getHideRevealTransitionEndProperty("hiddenStyle")] = this.onHideTransitionEnd, 
        this.transition({
            from: t.visibleStyle,
            to: t.hiddenStyle,
            isCleaning: !0,
            onTransitionEnd: e
        });
    }, d.onHideTransitionEnd = function() {
        this.isHidden && (this.css({
            display: "none"
        }), this.emitEvent("hide"));
    }, d.destroy = function() {
        this.css({
            position: "",
            left: "",
            right: "",
            top: "",
            bottom: "",
            transition: "",
            transform: ""
        });
    }, n;
}), function(t, e) {
    "use strict";
    "function" == typeof define && define.amd ? define("outlayer/outlayer", [ "ev-emitter/ev-emitter", "get-size/get-size", "fizzy-ui-utils/utils", "./item" ], function(i, n, s, o) {
        return e(t, i, n, s, o);
    }) : "object" == typeof module && module.exports ? module.exports = e(t, require("ev-emitter"), require("get-size"), require("fizzy-ui-utils"), require("./item")) : t.Outlayer = e(t, t.EvEmitter, t.getSize, t.fizzyUIUtils, t.Outlayer.Item);
}(window, function(t, e, i, n, s) {
    "use strict";
    function o(t, e) {
        var i = n.getQueryElement(t);
        if (i) {
            this.element = i, d && (this.$element = d(this.element)), this.options = n.extend({}, this.constructor.defaults), 
            this.option(e);
            var s = ++u;
            this.element.outlayerGUID = s, c[s] = this, this._create(), this._getOption("initLayout") && this.layout();
        } else h && h.error("Bad element for " + this.constructor.namespace + ": " + (i || t));
    }
    function r(t) {
        function e() {
            t.apply(this, arguments);
        }
        return e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e;
    }
    function a(t) {
        if ("number" == typeof t) return t;
        var e = t.match(/(^\d*\.?\d*)(\w*)/), i = e && e[1], n = e && e[2];
        return i.length ? (i = parseFloat(i)) * (f[n] || 1) : 0;
    }
    var h = t.console, d = t.jQuery, l = function() {}, u = 0, c = {};
    o.namespace = "outlayer", o.Item = s, o.defaults = {
        containerStyle: {
            position: "relative"
        },
        initLayout: !0,
        originLeft: !0,
        originTop: !0,
        resize: !0,
        resizeContainer: !0,
        transitionDuration: "0.4s",
        hiddenStyle: {
            opacity: 0,
            transform: "scale(0.001)"
        },
        visibleStyle: {
            opacity: 1,
            transform: "scale(1)"
        }
    };
    var p = o.prototype;
    n.extend(p, e.prototype), p.option = function(t) {
        n.extend(this.options, t);
    }, p._getOption = function(t) {
        var e = this.constructor.compatOptions[t];
        return e && void 0 !== this.options[e] ? this.options[e] : this.options[t];
    }, o.compatOptions = {
        initLayout: "isInitLayout",
        horizontal: "isHorizontal",
        layoutInstant: "isLayoutInstant",
        originLeft: "isOriginLeft",
        originTop: "isOriginTop",
        resize: "isResizeBound",
        resizeContainer: "isResizingContainer"
    }, p._create = function() {
        this.reloadItems(), this.stamps = [], this.stamp(this.options.stamp), n.extend(this.element.style, this.options.containerStyle), 
        this._getOption("resize") && this.bindResize();
    }, p.reloadItems = function() {
        this.items = this._itemize(this.element.children);
    }, p._itemize = function(t) {
        for (var e = this._filterFindItemElements(t), i = this.constructor.Item, n = [], s = 0; s < e.length; s++) {
            var o = new i(e[s], this);
            n.push(o);
        }
        return n;
    }, p._filterFindItemElements = function(t) {
        return n.filterFindElements(t, this.options.itemSelector);
    }, p.getItemElements = function() {
        return this.items.map(function(t) {
            return t.element;
        });
    }, p.layout = function() {
        this._resetLayout(), this._manageStamps();
        var t = this._getOption("layoutInstant"), e = void 0 !== t ? t : !this._isLayoutInited;
        this.layoutItems(this.items, e), this._isLayoutInited = !0;
    }, p._init = p.layout, p._resetLayout = function() {
        this.getSize();
    }, p.getSize = function() {
        this.size = i(this.element);
    }, p._getMeasurement = function(t, e) {
        var n, s = this.options[t];
        s ? ("string" == typeof s ? n = this.element.querySelector(s) : s instanceof HTMLElement && (n = s), 
        this[t] = n ? i(n)[e] : s) : this[t] = 0;
    }, p.layoutItems = function(t, e) {
        t = this._getItemsForLayout(t), this._layoutItems(t, e), this._postLayout();
    }, p._getItemsForLayout = function(t) {
        return t.filter(function(t) {
            return !t.isIgnored;
        });
    }, p._layoutItems = function(t, e) {
        if (this._emitCompleteOnItems("layout", t), t && t.length) {
            var i = [];
            t.forEach(function(t) {
                var n = this._getItemLayoutPosition(t);
                n.item = t, n.isInstant = e || t.isLayoutInstant, i.push(n);
            }, this), this._processLayoutQueue(i);
        }
    }, p._getItemLayoutPosition = function() {
        return {
            x: 0,
            y: 0
        };
    }, p._processLayoutQueue = function(t) {
        this.updateStagger(), t.forEach(function(t, e) {
            this._positionItem(t.item, t.x, t.y, t.isInstant, e);
        }, this);
    }, p.updateStagger = function() {
        var t = this.options.stagger;
        return null === t || void 0 === t ? void (this.stagger = 0) : (this.stagger = a(t), 
        this.stagger);
    }, p._positionItem = function(t, e, i, n, s) {
        n ? t.goTo(e, i) : (t.stagger(s * this.stagger), t.moveTo(e, i));
    }, p._postLayout = function() {
        this.resizeContainer();
    }, p.resizeContainer = function() {
        if (this._getOption("resizeContainer")) {
            var t = this._getContainerSize();
            t && (this._setContainerMeasure(t.width, !0), this._setContainerMeasure(t.height, !1));
        }
    }, p._getContainerSize = l, p._setContainerMeasure = function(t, e) {
        if (void 0 !== t) {
            var i = this.size;
            i.isBorderBox && (t += e ? i.paddingLeft + i.paddingRight + i.borderLeftWidth + i.borderRightWidth : i.paddingBottom + i.paddingTop + i.borderTopWidth + i.borderBottomWidth), 
            t = Math.max(t, 0), this.element.style[e ? "width" : "height"] = t + "px";
        }
    }, p._emitCompleteOnItems = function(t, e) {
        function i() {
            s.dispatchEvent(t + "Complete", null, [ e ]);
        }
        function n() {
            ++r == o && i();
        }
        var s = this, o = e.length;
        if (e && o) {
            var r = 0;
            e.forEach(function(e) {
                e.once(t, n);
            });
        } else i();
    }, p.dispatchEvent = function(t, e, i) {
        var n = e ? [ e ].concat(i) : i;
        if (this.emitEvent(t, n), d) if (this.$element = this.$element || d(this.element), 
        e) {
            var s = d.Event(e);
            s.type = t, this.$element.trigger(s, i);
        } else this.$element.trigger(t, i);
    }, p.ignore = function(t) {
        var e = this.getItem(t);
        e && (e.isIgnored = !0);
    }, p.unignore = function(t) {
        var e = this.getItem(t);
        e && delete e.isIgnored;
    }, p.stamp = function(t) {
        (t = this._find(t)) && (this.stamps = this.stamps.concat(t), t.forEach(this.ignore, this));
    }, p.unstamp = function(t) {
        (t = this._find(t)) && t.forEach(function(t) {
            n.removeFrom(this.stamps, t), this.unignore(t);
        }, this);
    }, p._find = function(t) {
        return t ? ("string" == typeof t && (t = this.element.querySelectorAll(t)), t = n.makeArray(t)) : void 0;
    }, p._manageStamps = function() {
        this.stamps && this.stamps.length && (this._getBoundingRect(), this.stamps.forEach(this._manageStamp, this));
    }, p._getBoundingRect = function() {
        var t = this.element.getBoundingClientRect(), e = this.size;
        this._boundingRect = {
            left: t.left + e.paddingLeft + e.borderLeftWidth,
            top: t.top + e.paddingTop + e.borderTopWidth,
            right: t.right - (e.paddingRight + e.borderRightWidth),
            bottom: t.bottom - (e.paddingBottom + e.borderBottomWidth)
        };
    }, p._manageStamp = l, p._getElementOffset = function(t) {
        var e = t.getBoundingClientRect(), n = this._boundingRect, s = i(t);
        return {
            left: e.left - n.left - s.marginLeft,
            top: e.top - n.top - s.marginTop,
            right: n.right - e.right - s.marginRight,
            bottom: n.bottom - e.bottom - s.marginBottom
        };
    }, p.handleEvent = n.handleEvent, p.bindResize = function() {
        t.addEventListener("resize", this), this.isResizeBound = !0;
    }, p.unbindResize = function() {
        t.removeEventListener("resize", this), this.isResizeBound = !1;
    }, p.onresize = function() {
        this.resize();
    }, n.debounceMethod(o, "onresize", 100), p.resize = function() {
        this.isResizeBound && this.needsResizeLayout() && this.layout();
    }, p.needsResizeLayout = function() {
        var t = i(this.element);
        return this.size && t && t.innerWidth !== this.size.innerWidth;
    }, p.addItems = function(t) {
        var e = this._itemize(t);
        return e.length && (this.items = this.items.concat(e)), e;
    }, p.appended = function(t) {
        var e = this.addItems(t);
        e.length && (this.layoutItems(e, !0), this.reveal(e));
    }, p.prepended = function(t) {
        var e = this._itemize(t);
        if (e.length) {
            var i = this.items.slice(0);
            this.items = e.concat(i), this._resetLayout(), this._manageStamps(), this.layoutItems(e, !0), 
            this.reveal(e), this.layoutItems(i);
        }
    }, p.reveal = function(t) {
        if (this._emitCompleteOnItems("reveal", t), t && t.length) {
            var e = this.updateStagger();
            t.forEach(function(t, i) {
                t.stagger(i * e), t.reveal();
            });
        }
    }, p.hide = function(t) {
        if (this._emitCompleteOnItems("hide", t), t && t.length) {
            var e = this.updateStagger();
            t.forEach(function(t, i) {
                t.stagger(i * e), t.hide();
            });
        }
    }, p.revealItemElements = function(t) {
        var e = this.getItems(t);
        this.reveal(e);
    }, p.hideItemElements = function(t) {
        var e = this.getItems(t);
        this.hide(e);
    }, p.getItem = function(t) {
        for (var e = 0; e < this.items.length; e++) {
            var i = this.items[e];
            if (i.element == t) return i;
        }
    }, p.getItems = function(t) {
        var e = [];
        return (t = n.makeArray(t)).forEach(function(t) {
            var i = this.getItem(t);
            i && e.push(i);
        }, this), e;
    }, p.remove = function(t) {
        var e = this.getItems(t);
        this._emitCompleteOnItems("remove", e), e && e.length && e.forEach(function(t) {
            t.remove(), n.removeFrom(this.items, t);
        }, this);
    }, p.destroy = function() {
        var t = this.element.style;
        t.height = "", t.position = "", t.width = "", this.items.forEach(function(t) {
            t.destroy();
        }), this.unbindResize();
        var e = this.element.outlayerGUID;
        delete c[e], delete this.element.outlayerGUID, d && d.removeData(this.element, this.constructor.namespace);
    }, o.data = function(t) {
        var e = (t = n.getQueryElement(t)) && t.outlayerGUID;
        return e && c[e];
    }, o.create = function(t, e) {
        var i = r(o);
        return i.defaults = n.extend({}, o.defaults), n.extend(i.defaults, e), i.compatOptions = n.extend({}, o.compatOptions), 
        i.namespace = t, i.data = o.data, i.Item = r(s), n.htmlInit(i, t), d && d.bridget && d.bridget(t, i), 
        i;
    };
    var f = {
        ms: 1,
        s: 1e3
    };
    return o.Item = s, o;
}), function(t, e) {
    "function" == typeof define && define.amd ? define("isotope/js/item", [ "outlayer/outlayer" ], e) : "object" == typeof module && module.exports ? module.exports = e(require("outlayer")) : (t.Isotope = t.Isotope || {}, 
    t.Isotope.Item = e(t.Outlayer));
}(window, function(t) {
    "use strict";
    function e() {
        t.Item.apply(this, arguments);
    }
    var i = e.prototype = Object.create(t.Item.prototype), n = i._create;
    i._create = function() {
        this.id = this.layout.itemGUID++, n.call(this), this.sortData = {};
    }, i.updateSortData = function() {
        if (!this.isIgnored) {
            this.sortData.id = this.id, this.sortData["original-order"] = this.id, this.sortData.random = Math.random();
            var t = this.layout.options.getSortData, e = this.layout._sorters;
            for (var i in t) {
                var n = e[i];
                this.sortData[i] = n(this.element, this);
            }
        }
    };
    var s = i.destroy;
    return i.destroy = function() {
        s.apply(this, arguments), this.css({
            display: ""
        });
    }, e;
}), function(t, e) {
    "function" == typeof define && define.amd ? define("isotope/js/layout-mode", [ "get-size/get-size", "outlayer/outlayer" ], e) : "object" == typeof module && module.exports ? module.exports = e(require("get-size"), require("outlayer")) : (t.Isotope = t.Isotope || {}, 
    t.Isotope.LayoutMode = e(t.getSize, t.Outlayer));
}(window, function(t, e) {
    "use strict";
    function i(t) {
        this.isotope = t, t && (this.options = t.options[this.namespace], this.element = t.element, 
        this.items = t.filteredItems, this.size = t.size);
    }
    var n = i.prototype;
    return [ "_resetLayout", "_getItemLayoutPosition", "_manageStamp", "_getContainerSize", "_getElementOffset", "needsResizeLayout", "_getOption" ].forEach(function(t) {
        n[t] = function() {
            return e.prototype[t].apply(this.isotope, arguments);
        };
    }), n.needsVerticalResizeLayout = function() {
        var e = t(this.isotope.element);
        return this.isotope.size && e && e.innerHeight != this.isotope.size.innerHeight;
    }, n._getMeasurement = function() {
        this.isotope._getMeasurement.apply(this, arguments);
    }, n.getColumnWidth = function() {
        this.getSegmentSize("column", "Width");
    }, n.getRowHeight = function() {
        this.getSegmentSize("row", "Height");
    }, n.getSegmentSize = function(t, e) {
        var i = t + e, n = "outer" + e;
        if (this._getMeasurement(i, n), !this[i]) {
            var s = this.getFirstItemSize();
            this[i] = s && s[n] || this.isotope.size["inner" + e];
        }
    }, n.getFirstItemSize = function() {
        var e = this.isotope.filteredItems[0];
        return e && e.element && t(e.element);
    }, n.layout = function() {
        this.isotope.layout.apply(this.isotope, arguments);
    }, n.getSize = function() {
        this.isotope.getSize(), this.size = this.isotope.size;
    }, i.modes = {}, i.create = function(t, e) {
        function s() {
            i.apply(this, arguments);
        }
        return s.prototype = Object.create(n), s.prototype.constructor = s, e && (s.options = e), 
        s.prototype.namespace = t, i.modes[t] = s, s;
    }, i;
}), function(t, e) {
    "function" == typeof define && define.amd ? define("masonry/masonry", [ "outlayer/outlayer", "get-size/get-size" ], e) : "object" == typeof module && module.exports ? module.exports = e(require("outlayer"), require("get-size")) : t.Masonry = e(t.Outlayer, t.getSize);
}(window, function(t, e) {
    var i = t.create("masonry");
    return i.compatOptions.fitWidth = "isFitWidth", i.prototype._resetLayout = function() {
        this.getSize(), this._getMeasurement("columnWidth", "outerWidth"), this._getMeasurement("gutter", "outerWidth"), 
        this.measureColumns(), this.colYs = [];
        for (var t = 0; t < this.cols; t++) this.colYs.push(0);
        this.maxY = 0;
    }, i.prototype.measureColumns = function() {
        if (this.getContainerWidth(), !this.columnWidth) {
            var t = this.items[0], i = t && t.element;
            this.columnWidth = i && e(i).outerWidth || this.containerWidth;
        }
        var n = this.columnWidth += this.gutter, s = this.containerWidth + this.gutter, o = s / n, r = n - s % n, a = r && 1 > r ? "round" : "floor";
        o = Math[a](o), this.cols = Math.max(o, 1);
    }, i.prototype.getContainerWidth = function() {
        var t = this._getOption("fitWidth") ? this.element.parentNode : this.element, i = e(t);
        this.containerWidth = i && i.innerWidth;
    }, i.prototype._getItemLayoutPosition = function(t) {
        t.getSize();
        var e = t.size.outerWidth % this.columnWidth, i = e && 1 > e ? "round" : "ceil", n = Math[i](t.size.outerWidth / this.columnWidth);
        n = Math.min(n, this.cols);
        for (var s = this._getColGroup(n), o = Math.min.apply(Math, s), r = s.indexOf(o), a = {
            x: this.columnWidth * r,
            y: o
        }, h = o + t.size.outerHeight, d = this.cols + 1 - s.length, l = 0; d > l; l++) this.colYs[r + l] = h;
        return a;
    }, i.prototype._getColGroup = function(t) {
        if (2 > t) return this.colYs;
        for (var e = [], i = this.cols + 1 - t, n = 0; i > n; n++) {
            var s = this.colYs.slice(n, n + t);
            e[n] = Math.max.apply(Math, s);
        }
        return e;
    }, i.prototype._manageStamp = function(t) {
        var i = e(t), n = this._getElementOffset(t), s = this._getOption("originLeft") ? n.left : n.right, o = s + i.outerWidth, r = Math.floor(s / this.columnWidth);
        r = Math.max(0, r);
        var a = Math.floor(o / this.columnWidth);
        a -= o % this.columnWidth ? 0 : 1, a = Math.min(this.cols - 1, a);
        for (var h = (this._getOption("originTop") ? n.top : n.bottom) + i.outerHeight, d = r; a >= d; d++) this.colYs[d] = Math.max(h, this.colYs[d]);
    }, i.prototype._getContainerSize = function() {
        this.maxY = Math.max.apply(Math, this.colYs);
        var t = {
            height: this.maxY
        };
        return this._getOption("fitWidth") && (t.width = this._getContainerFitWidth()), 
        t;
    }, i.prototype._getContainerFitWidth = function() {
        for (var t = 0, e = this.cols; --e && 0 === this.colYs[e]; ) t++;
        return (this.cols - t) * this.columnWidth - this.gutter;
    }, i.prototype.needsResizeLayout = function() {
        var t = this.containerWidth;
        return this.getContainerWidth(), t != this.containerWidth;
    }, i;
}), function(t, e) {
    "function" == typeof define && define.amd ? define("isotope/js/layout-modes/masonry", [ "../layout-mode", "masonry/masonry" ], e) : "object" == typeof module && module.exports ? module.exports = e(require("../layout-mode"), require("masonry-layout")) : e(t.Isotope.LayoutMode, t.Masonry);
}(window, function(t, e) {
    "use strict";
    var i = t.create("masonry"), n = i.prototype, s = {
        _getElementOffset: !0,
        layout: !0,
        _getMeasurement: !0
    };
    for (var o in e.prototype) s[o] || (n[o] = e.prototype[o]);
    var r = n.measureColumns;
    n.measureColumns = function() {
        this.items = this.isotope.filteredItems, r.call(this);
    };
    var a = n._getOption;
    return n._getOption = function(t) {
        return "fitWidth" == t ? void 0 !== this.options.isFitWidth ? this.options.isFitWidth : this.options.fitWidth : a.apply(this.isotope, arguments);
    }, i;
}), function(t, e) {
    "function" == typeof define && define.amd ? define("isotope/js/layout-modes/fit-rows", [ "../layout-mode" ], e) : "object" == typeof exports ? module.exports = e(require("../layout-mode")) : e(t.Isotope.LayoutMode);
}(window, function(t) {
    "use strict";
    var e = t.create("fitRows"), i = e.prototype;
    return i._resetLayout = function() {
        this.x = 0, this.y = 0, this.maxY = 0, this._getMeasurement("gutter", "outerWidth");
    }, i._getItemLayoutPosition = function(t) {
        t.getSize();
        var e = t.size.outerWidth + this.gutter, i = this.isotope.size.innerWidth + this.gutter;
        0 !== this.x && e + this.x > i && (this.x = 0, this.y = this.maxY);
        var n = {
            x: this.x,
            y: this.y
        };
        return this.maxY = Math.max(this.maxY, this.y + t.size.outerHeight), this.x += e, 
        n;
    }, i._getContainerSize = function() {
        return {
            height: this.maxY
        };
    }, e;
}), function(t, e) {
    "function" == typeof define && define.amd ? define("isotope/js/layout-modes/vertical", [ "../layout-mode" ], e) : "object" == typeof module && module.exports ? module.exports = e(require("../layout-mode")) : e(t.Isotope.LayoutMode);
}(window, function(t) {
    "use strict";
    var e = t.create("vertical", {
        horizontalAlignment: 0
    }), i = e.prototype;
    return i._resetLayout = function() {
        this.y = 0;
    }, i._getItemLayoutPosition = function(t) {
        t.getSize();
        var e = (this.isotope.size.innerWidth - t.size.outerWidth) * this.options.horizontalAlignment, i = this.y;
        return this.y += t.size.outerHeight, {
            x: e,
            y: i
        };
    }, i._getContainerSize = function() {
        return {
            height: this.y
        };
    }, e;
}), function(t, e) {
    "function" == typeof define && define.amd ? define([ "outlayer/outlayer", "get-size/get-size", "desandro-matches-selector/matches-selector", "fizzy-ui-utils/utils", "isotope/js/item", "isotope/js/layout-mode", "isotope/js/layout-modes/masonry", "isotope/js/layout-modes/fit-rows", "isotope/js/layout-modes/vertical" ], function(i, n, s, o, r, a) {
        return e(t, i, n, s, o, r, a);
    }) : "object" == typeof module && module.exports ? module.exports = e(t, require("outlayer"), require("get-size"), require("desandro-matches-selector"), require("fizzy-ui-utils"), require("isotope/js/item"), require("isotope/js/layout-mode"), require("isotope/js/layout-modes/masonry"), require("isotope/js/layout-modes/fit-rows"), require("isotope/js/layout-modes/vertical")) : t.Isotope = e(t, t.Outlayer, t.getSize, t.matchesSelector, t.fizzyUIUtils, t.Isotope.Item, t.Isotope.LayoutMode);
}(window, function(t, e, i, n, s, o, r) {
    function a(t, e) {
        return function(i, n) {
            for (var s = 0; s < t.length; s++) {
                var o = t[s], r = i.sortData[o], a = n.sortData[o];
                if (r > a || a > r) {
                    var h = (void 0 !== e[o] ? e[o] : e) ? 1 : -1;
                    return (r > a ? 1 : -1) * h;
                }
            }
            return 0;
        };
    }
    var h = t.jQuery, d = String.prototype.trim ? function(t) {
        return t.trim();
    } : function(t) {
        return t.replace(/^\s+|\s+$/g, "");
    }, l = e.create("isotope", {
        layoutMode: "masonry",
        isJQueryFiltering: !0,
        sortAscending: !0
    });
    l.Item = o, l.LayoutMode = r;
    var u = l.prototype;
    u._create = function() {
        this.itemGUID = 0, this._sorters = {}, this._getSorters(), e.prototype._create.call(this), 
        this.modes = {}, this.filteredItems = this.items, this.sortHistory = [ "original-order" ];
        for (var t in r.modes) this._initLayoutMode(t);
    }, u.reloadItems = function() {
        this.itemGUID = 0, e.prototype.reloadItems.call(this);
    }, u._itemize = function() {
        for (var t = e.prototype._itemize.apply(this, arguments), i = 0; i < t.length; i++) t[i].id = this.itemGUID++;
        return this._updateItemsSortData(t), t;
    }, u._initLayoutMode = function(t) {
        var e = r.modes[t], i = this.options[t] || {};
        this.options[t] = e.options ? s.extend(e.options, i) : i, this.modes[t] = new e(this);
    }, u.layout = function() {
        return !this._isLayoutInited && this._getOption("initLayout") ? void this.arrange() : void this._layout();
    }, u._layout = function() {
        var t = this._getIsInstant();
        this._resetLayout(), this._manageStamps(), this.layoutItems(this.filteredItems, t), 
        this._isLayoutInited = !0;
    }, u.arrange = function(t) {
        this.option(t), this._getIsInstant();
        var e = this._filter(this.items);
        this.filteredItems = e.matches, this._bindArrangeComplete(), this._isInstant ? this._noTransition(this._hideReveal, [ e ]) : this._hideReveal(e), 
        this._sort(), this._layout();
    }, u._init = u.arrange, u._hideReveal = function(t) {
        this.reveal(t.needReveal), this.hide(t.needHide);
    }, u._getIsInstant = function() {
        var t = this._getOption("layoutInstant"), e = void 0 !== t ? t : !this._isLayoutInited;
        return this._isInstant = e, e;
    }, u._bindArrangeComplete = function() {
        function t() {
            e && i && n && s.dispatchEvent("arrangeComplete", null, [ s.filteredItems ]);
        }
        var e, i, n, s = this;
        this.once("layoutComplete", function() {
            e = !0, t();
        }), this.once("hideComplete", function() {
            i = !0, t();
        }), this.once("revealComplete", function() {
            n = !0, t();
        });
    }, u._filter = function(t) {
        var e = this.options.filter;
        e = e || "*";
        for (var i = [], n = [], s = [], o = this._getFilterTest(e), r = 0; r < t.length; r++) {
            var a = t[r];
            if (!a.isIgnored) {
                var h = o(a);
                h && i.push(a), h && a.isHidden ? n.push(a) : h || a.isHidden || s.push(a);
            }
        }
        return {
            matches: i,
            needReveal: n,
            needHide: s
        };
    }, u._getFilterTest = function(t) {
        return h && this.options.isJQueryFiltering ? function(e) {
            return h(e.element).is(t);
        } : "function" == typeof t ? function(e) {
            return t(e.element);
        } : function(e) {
            return n(e.element, t);
        };
    }, u.updateSortData = function(t) {
        var e;
        t ? (t = s.makeArray(t), e = this.getItems(t)) : e = this.items, this._getSorters(), 
        this._updateItemsSortData(e);
    }, u._getSorters = function() {
        var t = this.options.getSortData;
        for (var e in t) {
            var i = t[e];
            this._sorters[e] = c(i);
        }
    }, u._updateItemsSortData = function(t) {
        for (var e = t && t.length, i = 0; e && e > i; i++) t[i].updateSortData();
    };
    var c = function() {
        function t(t, e) {
            return t ? function(e) {
                return e.getAttribute(t);
            } : function(t) {
                var i = t.querySelector(e);
                return i && i.textContent;
            };
        }
        return function(e) {
            if ("string" != typeof e) return e;
            var i = d(e).split(" "), n = i[0], s = n.match(/^\[(.+)\]$/), o = t(s && s[1], n), r = l.sortDataParsers[i[1]];
            return e = r ? function(t) {
                return t && r(o(t));
            } : function(t) {
                return t && o(t);
            };
        };
    }();
    l.sortDataParsers = {
        parseInt: function(t) {
            return parseInt(t, 10);
        },
        parseFloat: function(t) {
            return parseFloat(t);
        }
    }, u._sort = function() {
        var t = this.options.sortBy;
        if (t) {
            var e = a([].concat.apply(t, this.sortHistory), this.options.sortAscending);
            this.filteredItems.sort(e), t != this.sortHistory[0] && this.sortHistory.unshift(t);
        }
    }, u._mode = function() {
        var t = this.options.layoutMode, e = this.modes[t];
        if (!e) throw new Error("No layout mode: " + t);
        return e.options = this.options[t], e;
    }, u._resetLayout = function() {
        e.prototype._resetLayout.call(this), this._mode()._resetLayout();
    }, u._getItemLayoutPosition = function(t) {
        return this._mode()._getItemLayoutPosition(t);
    }, u._manageStamp = function(t) {
        this._mode()._manageStamp(t);
    }, u._getContainerSize = function() {
        return this._mode()._getContainerSize();
    }, u.needsResizeLayout = function() {
        return this._mode().needsResizeLayout();
    }, u.appended = function(t) {
        var e = this.addItems(t);
        if (e.length) {
            var i = this._filterRevealAdded(e);
            this.filteredItems = this.filteredItems.concat(i);
        }
    }, u.prepended = function(t) {
        var e = this._itemize(t);
        if (e.length) {
            this._resetLayout(), this._manageStamps();
            var i = this._filterRevealAdded(e);
            this.layoutItems(this.filteredItems), this.filteredItems = i.concat(this.filteredItems), 
            this.items = e.concat(this.items);
        }
    }, u._filterRevealAdded = function(t) {
        var e = this._filter(t);
        return this.hide(e.needHide), this.reveal(e.matches), this.layoutItems(e.matches, !0), 
        e.matches;
    }, u.insert = function(t) {
        var e = this.addItems(t);
        if (e.length) {
            var i, n, s = e.length;
            for (i = 0; s > i; i++) n = e[i], this.element.appendChild(n.element);
            var o = this._filter(e).matches;
            for (i = 0; s > i; i++) e[i].isLayoutInstant = !0;
            for (this.arrange(), i = 0; s > i; i++) delete e[i].isLayoutInstant;
            this.reveal(o);
        }
    };
    var p = u.remove;
    return u.remove = function(t) {
        t = s.makeArray(t);
        var e = this.getItems(t);
        p.call(this, t);
        for (var i = e && e.length, n = 0; i && i > n; n++) {
            var o = e[n];
            s.removeFrom(this.filteredItems, o);
        }
    }, u.shuffle = function() {
        for (var t = 0; t < this.items.length; t++) this.items[t].sortData.random = Math.random();
        this.options.sortBy = "random", this._sort(), this._layout();
    }, u._noTransition = function(t, e) {
        var i = this.options.transitionDuration;
        this.options.transitionDuration = 0;
        var n = t.apply(this, e);
        return this.options.transitionDuration = i, n;
    }, u.getFilteredItemElements = function() {
        return this.filteredItems.map(function(t) {
            return t.element;
        });
    }, l;
}), function(t) {
    var e = {}, n = {
        mode: "horizontal",
        slideSelector: "",
        infiniteLoop: !0,
        hideControlOnEnd: !1,
        speed: 500,
        easing: null,
        slideMargin: 0,
        startSlide: 0,
        randomStart: !1,
        captions: !1,
        ticker: !1,
        tickerHover: !1,
        adaptiveHeight: !1,
        adaptiveHeightSpeed: 500,
        video: !1,
        useCSS: !0,
        preloadImages: "visible",
        responsive: !0,
        slideZIndex: 50,
        touchEnabled: !0,
        swipeThreshold: 50,
        oneToOneTouch: !0,
        preventDefaultSwipeX: !0,
        preventDefaultSwipeY: !1,
        pager: !0,
        pagerType: "full",
        pagerShortSeparator: " / ",
        pagerSelector: null,
        buildPager: null,
        pagerCustom: null,
        controls: !0,
        nextText: "Next",
        prevText: "Prev",
        nextSelector: null,
        prevSelector: null,
        autoControls: !1,
        startText: "Start",
        stopText: "Stop",
        autoControlsCombine: !1,
        autoControlsSelector: null,
        auto: !1,
        pause: 4e3,
        autoStart: !0,
        autoDirection: "next",
        autoHover: !1,
        autoDelay: 0,
        minSlides: 1,
        maxSlides: 1,
        moveSlides: 0,
        slideWidth: 0,
        onSliderLoad: function() {},
        onSlideBefore: function() {},
        onSlideAfter: function() {},
        onSlideNext: function() {},
        onSlidePrev: function() {},
        onSliderResize: function() {}
    };
    t.fn.bxSlider = function(s) {
        if (0 == this.length) return this;
        if (this.length > 1) return this.each(function() {
            t(this).bxSlider(s);
        }), this;
        var o = {}, r = this;
        e.el = this;
        var a = t(window).width(), h = t(window).height(), d = function() {
            o.settings = t.extend({}, n, s), o.settings.slideWidth = parseInt(o.settings.slideWidth), 
            o.children = r.children(o.settings.slideSelector), o.children.length < o.settings.minSlides && (o.settings.minSlides = o.children.length), 
            o.children.length < o.settings.maxSlides && (o.settings.maxSlides = o.children.length), 
            o.settings.randomStart && (o.settings.startSlide = Math.floor(Math.random() * o.children.length)), 
            o.active = {
                index: o.settings.startSlide
            }, o.carousel = o.settings.minSlides > 1 || o.settings.maxSlides > 1, o.carousel && (o.settings.preloadImages = "all"), 
            o.minThreshold = o.settings.minSlides * o.settings.slideWidth + (o.settings.minSlides - 1) * o.settings.slideMargin, 
            o.maxThreshold = o.settings.maxSlides * o.settings.slideWidth + (o.settings.maxSlides - 1) * o.settings.slideMargin, 
            o.working = !1, o.controls = {}, o.interval = null, o.animProp = "vertical" == o.settings.mode ? "top" : "left", 
            o.usingCSS = o.settings.useCSS && "fade" != o.settings.mode && function() {
                var t = document.createElement("div"), e = [ "WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective" ];
                for (var i in e) if (void 0 !== t.style[e[i]]) return o.cssPrefix = e[i].replace("Perspective", "").toLowerCase(), 
                o.animProp = "-" + o.cssPrefix + "-transform", !0;
                return !1;
            }(), "vertical" == o.settings.mode && (o.settings.maxSlides = o.settings.minSlides), 
            r.data("origStyle", r.attr("style")), r.children(o.settings.slideSelector).each(function() {
                t(this).data("origStyle", t(this).attr("style"));
            }), l();
        }, l = function() {
            r.wrap('<div class="bx-wrapper"><div class="bx-viewport"></div></div>'), o.viewport = r.parent(), 
            o.loader = t('<div class="bx-loading" />'), o.viewport.prepend(o.loader), r.css({
                width: "horizontal" == o.settings.mode ? 100 * o.children.length + 215 + "%" : "auto",
                position: "relative"
            }), o.usingCSS && o.settings.easing ? r.css("-" + o.cssPrefix + "-transition-timing-function", o.settings.easing) : o.settings.easing || (o.settings.easing = "swing"), 
            m(), o.viewport.css({
                width: "100%",
                overflow: "hidden",
                position: "relative"
            }), o.viewport.parent().css({
                maxWidth: f()
            }), o.settings.pager || o.viewport.parent().css({
                margin: "0 auto 0px"
            }), o.children.css({
                float: "horizontal" == o.settings.mode ? "left" : "none",
                listStyle: "none",
                position: "relative"
            }), o.children.css("width", g()), "horizontal" == o.settings.mode && o.settings.slideMargin > 0 && o.children.css("marginRight", o.settings.slideMargin), 
            "vertical" == o.settings.mode && o.settings.slideMargin > 0 && o.children.css("marginBottom", o.settings.slideMargin), 
            "fade" == o.settings.mode && (o.children.css({
                position: "absolute",
                zIndex: 0,
                display: "none"
            }), o.children.eq(o.settings.startSlide).css({
                zIndex: o.settings.slideZIndex,
                display: "block"
            })), o.controls.el = t('<div class="bx-controls" />'), o.settings.captions && C(), 
            o.active.last = o.settings.startSlide == v() - 1, o.settings.video && r.fitVids();
            var e = o.children.eq(o.settings.startSlide);
            "all" == o.settings.preloadImages && (e = o.children), o.settings.ticker ? o.settings.pager = !1 : (o.settings.pager && b(), 
            o.settings.controls && S(), o.settings.auto && o.settings.autoControls && I(), (o.settings.controls || o.settings.autoControls || o.settings.pager) && o.viewport.after(o.controls.el)), 
            u(e, c);
        }, u = function(e, i) {
            var n = e.find("img, iframe").length;
            if (0 != n) {
                var s = 0;
                e.find("img, iframe").each(function() {
                    t(this).one("load", function() {
                        ++s == n && i();
                    }).each(function() {
                        this.complete && t(this).load();
                    });
                });
            } else i();
        }, c = function() {
            if (o.settings.infiniteLoop && "fade" != o.settings.mode && !o.settings.ticker) {
                var e = "vertical" == o.settings.mode ? o.settings.minSlides : o.settings.maxSlides, i = o.children.slice(0, e).clone().addClass("bx-clone"), n = o.children.slice(-e).clone().addClass("bx-clone");
                r.append(i).prepend(n);
            }
            o.loader.remove(), _(), "vertical" == o.settings.mode && (o.settings.adaptiveHeight = !0), 
            o.viewport.height(p()), r.redrawSlider(), o.settings.onSliderLoad(o.active.index), 
            o.initialized = !0, o.settings.responsive && t(window).bind("resize", q), o.settings.auto && o.settings.autoStart && P(), 
            o.settings.ticker && H(), o.settings.pager && L(o.settings.startSlide), o.settings.controls && O(), 
            o.settings.touchEnabled && !o.settings.ticker && R();
        }, p = function() {
            var e = 0, n = t();
            if ("vertical" == o.settings.mode || o.settings.adaptiveHeight) if (o.carousel) {
                var s = 1 == o.settings.moveSlides ? o.active.index : o.active.index * y();
                for (n = o.children.eq(s), i = 1; i <= o.settings.maxSlides - 1; i++) n = s + i >= o.children.length ? n.add(o.children.eq(i - 1)) : n.add(o.children.eq(s + i));
            } else n = o.children.eq(o.active.index); else n = o.children;
            return "vertical" == o.settings.mode ? (n.each(function() {
                e += t(this).outerHeight();
            }), o.settings.slideMargin > 0 && (e += o.settings.slideMargin * (o.settings.minSlides - 1))) : e = Math.max.apply(Math, n.map(function() {
                return t(this).outerHeight(!1);
            }).get()), e;
        }, f = function() {
            var t = "100%";
            return o.settings.slideWidth > 0 && (t = "horizontal" == o.settings.mode ? o.settings.maxSlides * o.settings.slideWidth + (o.settings.maxSlides - 1) * o.settings.slideMargin : o.settings.slideWidth), 
            t;
        }, g = function() {
            var t = o.settings.slideWidth, e = o.viewport.width();
            return 0 == o.settings.slideWidth || o.settings.slideWidth > e && !o.carousel || "vertical" == o.settings.mode ? t = e : o.settings.maxSlides > 1 && "horizontal" == o.settings.mode && (e > o.maxThreshold || e < o.minThreshold && (t = (e - o.settings.slideMargin * (o.settings.minSlides - 1)) / o.settings.minSlides)), 
            t;
        }, m = function() {
            var t = 1;
            if ("horizontal" == o.settings.mode && o.settings.slideWidth > 0) if (o.viewport.width() < o.minThreshold) t = o.settings.minSlides; else if (o.viewport.width() > o.maxThreshold) t = o.settings.maxSlides; else {
                var e = o.children.first().width();
                t = Math.floor(o.viewport.width() / e);
            } else "vertical" == o.settings.mode && (t = o.settings.minSlides);
            return t;
        }, v = function() {
            var t = 0;
            if (o.settings.moveSlides > 0) if (o.settings.infiniteLoop) t = o.children.length / y(); else for (var e = 0, i = 0; e < o.children.length; ) ++t, 
            e = i + m(), i += o.settings.moveSlides <= m() ? o.settings.moveSlides : m(); else t = Math.ceil(o.children.length / m());
            return t;
        }, y = function() {
            return o.settings.moveSlides > 0 && o.settings.moveSlides <= m() ? o.settings.moveSlides : m();
        }, _ = function() {
            if (o.children.length > o.settings.maxSlides && o.active.last && !o.settings.infiniteLoop) {
                if ("horizontal" == o.settings.mode) {
                    var t = o.children.last(), e = t.position();
                    x(-(e.left - (o.viewport.width() - t.width())), "reset", 0);
                } else if ("vertical" == o.settings.mode) {
                    var i = o.children.length - o.settings.minSlides, e = o.children.eq(i).position();
                    x(-e.top, "reset", 0);
                }
            } else {
                e = o.children.eq(o.active.index * y()).position();
                o.active.index == v() - 1 && (o.active.last = !0), void 0 != e && ("horizontal" == o.settings.mode ? x(-e.left, "reset", 0) : "vertical" == o.settings.mode && x(-e.top, "reset", 0));
            }
        }, x = function(t, e, i, n) {
            if (o.usingCSS) {
                var s = "vertical" == o.settings.mode ? "translate3d(0, " + t + "px, 0)" : "translate3d(" + t + "px, 0, 0)";
                r.css("-" + o.cssPrefix + "-transition-duration", i / 1e3 + "s"), "slide" == e ? (r.css(o.animProp, s), 
                r.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                    r.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), M();
                })) : "reset" == e ? r.css(o.animProp, s) : "ticker" == e && (r.css("-" + o.cssPrefix + "-transition-timing-function", "linear"), 
                r.css(o.animProp, s), r.bind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
                    r.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd"), x(n.resetValue, "reset", 0), 
                    B();
                }));
            } else {
                var a = {};
                a[o.animProp] = t, "slide" == e ? r.animate(a, i, o.settings.easing, function() {
                    M();
                }) : "reset" == e ? r.css(o.animProp, t) : "ticker" == e && r.animate(a, speed, "linear", function() {
                    x(n.resetValue, "reset", 0), B();
                });
            }
        }, w = function() {
            for (var e = "", i = v(), n = 0; i > n; n++) {
                var s = "";
                o.settings.buildPager && t.isFunction(o.settings.buildPager) ? (s = o.settings.buildPager(n), 
                o.pagerEl.addClass("bx-custom-pager")) : (s = n + 1, o.pagerEl.addClass("bx-default-pager")), 
                e += '<div class="bx-pager-item"><a href="" data-slide-index="' + n + '" class="bx-pager-link">' + s + "</a></div>";
            }
            o.pagerEl.html(e);
        }, b = function() {
            o.settings.pagerCustom ? o.pagerEl = t(o.settings.pagerCustom) : (o.pagerEl = t('<div class="bx-pager" />'), 
            o.settings.pagerSelector ? t(o.settings.pagerSelector).html(o.pagerEl) : o.controls.el.addClass("bx-has-pager").append(o.pagerEl), 
            w()), o.pagerEl.on("click", "a", W);
        }, S = function() {
            o.controls.next = t('<a class="bx-next" href="">' + o.settings.nextText + "</a>"), 
            o.controls.prev = t('<a class="bx-prev" href="">' + o.settings.prevText + "</a>"), 
            o.controls.next.bind("click", z), o.controls.prev.bind("click", T), o.settings.nextSelector && t(o.settings.nextSelector).append(o.controls.next), 
            o.settings.prevSelector && t(o.settings.prevSelector).append(o.controls.prev), o.settings.nextSelector || o.settings.prevSelector || (o.controls.directionEl = t('<div class="bx-controls-direction" />'), 
            o.controls.directionEl.append(o.controls.prev).append(o.controls.next), o.controls.el.addClass("bx-has-controls-direction").append(o.controls.directionEl));
        }, I = function() {
            o.controls.start = t('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + o.settings.startText + "</a></div>"), 
            o.controls.stop = t('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + o.settings.stopText + "</a></div>"), 
            o.controls.autoEl = t('<div class="bx-controls-auto" />'), o.controls.autoEl.on("click", ".bx-start", E), 
            o.controls.autoEl.on("click", ".bx-stop", $), o.settings.autoControlsCombine ? o.controls.autoEl.append(o.controls.start) : o.controls.autoEl.append(o.controls.start).append(o.controls.stop), 
            o.settings.autoControlsSelector ? t(o.settings.autoControlsSelector).html(o.controls.autoEl) : o.controls.el.addClass("bx-has-controls-auto").append(o.controls.autoEl), 
            k(o.settings.autoStart ? "stop" : "start");
        }, C = function() {
            o.children.each(function() {
                var e = t(this).find("img:first").attr("title");
                void 0 != e && ("" + e).length && t(this).append('<div class="bx-caption"><span>' + e + "</span></div>");
            });
        }, z = function(t) {
            o.settings.auto && r.stopAuto(), r.goToNextSlide(), t.preventDefault();
        }, T = function(t) {
            o.settings.auto && r.stopAuto(), r.goToPrevSlide(), t.preventDefault();
        }, E = function(t) {
            r.startAuto(), t.preventDefault();
        }, $ = function(t) {
            r.stopAuto(), t.preventDefault();
        }, W = function(e) {
            o.settings.auto && r.stopAuto();
            var i = t(e.currentTarget), n = parseInt(i.attr("data-slide-index"));
            n != o.active.index && r.goToSlide(n), e.preventDefault();
        }, L = function(e) {
            var i = o.children.length;
            return "short" == o.settings.pagerType ? (o.settings.maxSlides > 1 && (i = Math.ceil(o.children.length / o.settings.maxSlides)), 
            void o.pagerEl.html(e + 1 + o.settings.pagerShortSeparator + i)) : (o.pagerEl.find("a").removeClass("active"), 
            void o.pagerEl.each(function(i, n) {
                t(n).find("a").eq(e).addClass("active");
            }));
        }, M = function() {
            if (o.settings.infiniteLoop) {
                var t = "";
                0 == o.active.index ? t = o.children.eq(0).position() : o.active.index == v() - 1 && o.carousel ? t = o.children.eq((v() - 1) * y()).position() : o.active.index == o.children.length - 1 && (t = o.children.eq(o.children.length - 1).position()), 
                t && ("horizontal" == o.settings.mode ? x(-t.left, "reset", 0) : "vertical" == o.settings.mode && x(-t.top, "reset", 0));
            }
            o.working = !1, o.settings.onSlideAfter(o.children.eq(o.active.index), o.oldIndex, o.active.index);
        }, k = function(t) {
            o.settings.autoControlsCombine ? o.controls.autoEl.html(o.controls[t]) : (o.controls.autoEl.find("a").removeClass("active"), 
            o.controls.autoEl.find("a:not(.bx-" + t + ")").addClass("active"));
        }, O = function() {
            1 == v() ? (o.controls.prev.addClass("disabled"), o.controls.next.addClass("disabled")) : !o.settings.infiniteLoop && o.settings.hideControlOnEnd && (0 == o.active.index ? (o.controls.prev.addClass("disabled"), 
            o.controls.next.removeClass("disabled")) : o.active.index == v() - 1 ? (o.controls.next.addClass("disabled"), 
            o.controls.prev.removeClass("disabled")) : (o.controls.prev.removeClass("disabled"), 
            o.controls.next.removeClass("disabled")));
        }, P = function() {
            o.settings.autoDelay > 0 ? setTimeout(r.startAuto, o.settings.autoDelay) : r.startAuto(), 
            o.settings.autoHover && r.hover(function() {
                o.interval && (r.stopAuto(!0), o.autoPaused = !0);
            }, function() {
                o.autoPaused && (r.startAuto(!0), o.autoPaused = null);
            });
        }, H = function() {
            var e = 0;
            if ("next" == o.settings.autoDirection) r.append(o.children.clone().addClass("bx-clone")); else {
                r.prepend(o.children.clone().addClass("bx-clone"));
                var i = o.children.first().position();
                e = "horizontal" == o.settings.mode ? -i.left : -i.top;
            }
            x(e, "reset", 0), o.settings.pager = !1, o.settings.controls = !1, o.settings.autoControls = !1, 
            o.settings.tickerHover && !o.usingCSS && o.viewport.hover(function() {
                r.stop();
            }, function() {
                var e = 0;
                o.children.each(function() {
                    e += "horizontal" == o.settings.mode ? t(this).outerWidth(!0) : t(this).outerHeight(!0);
                });
                var i = o.settings.speed / e, n = "horizontal" == o.settings.mode ? "left" : "top", s = i * (e - Math.abs(parseInt(r.css(n))));
                B(s);
            }), B();
        }, B = function(t) {
            speed = t || o.settings.speed;
            var e = {
                left: 0,
                top: 0
            }, i = {
                left: 0,
                top: 0
            };
            "next" == o.settings.autoDirection ? e = r.find(".bx-clone").first().position() : i = o.children.first().position();
            var n = "horizontal" == o.settings.mode ? -e.left : -e.top, s = {
                resetValue: "horizontal" == o.settings.mode ? -i.left : -i.top
            };
            x(n, "ticker", speed, s);
        }, R = function() {
            o.touch = {
                start: {
                    x: 0,
                    y: 0
                },
                end: {
                    x: 0,
                    y: 0
                }
            }, o.viewport.bind("touchstart", A);
        }, A = function(t) {
            if (o.working) t.preventDefault(); else {
                o.touch.originalPos = r.position();
                var e = t.originalEvent;
                o.touch.start.x = e.changedTouches[0].pageX, o.touch.start.y = e.changedTouches[0].pageY, 
                o.viewport.bind("touchmove", j), o.viewport.bind("touchend", D);
            }
        }, j = function(t) {
            var e = t.originalEvent, i = Math.abs(e.changedTouches[0].pageX - o.touch.start.x), n = Math.abs(e.changedTouches[0].pageY - o.touch.start.y);
            if (3 * i > n && o.settings.preventDefaultSwipeX ? t.preventDefault() : 3 * n > i && o.settings.preventDefaultSwipeY && t.preventDefault(), 
            "fade" != o.settings.mode && o.settings.oneToOneTouch) {
                var s = 0;
                if ("horizontal" == o.settings.mode) {
                    r = e.changedTouches[0].pageX - o.touch.start.x;
                    s = o.touch.originalPos.left + r;
                } else {
                    var r = e.changedTouches[0].pageY - o.touch.start.y;
                    s = o.touch.originalPos.top + r;
                }
                x(s, "reset", 0);
            }
        }, D = function(t) {
            o.viewport.unbind("touchmove", j);
            var e = t.originalEvent, i = 0;
            if (o.touch.end.x = e.changedTouches[0].pageX, o.touch.end.y = e.changedTouches[0].pageY, 
            "fade" == o.settings.mode) (n = Math.abs(o.touch.start.x - o.touch.end.x)) >= o.settings.swipeThreshold && (o.touch.start.x > o.touch.end.x ? r.goToNextSlide() : r.goToPrevSlide(), 
            r.stopAuto()); else {
                var n = 0;
                "horizontal" == o.settings.mode ? (n = o.touch.end.x - o.touch.start.x, i = o.touch.originalPos.left) : (n = o.touch.end.y - o.touch.start.y, 
                i = o.touch.originalPos.top), !o.settings.infiniteLoop && (0 == o.active.index && n > 0 || o.active.last && 0 > n) ? x(i, "reset", 200) : Math.abs(n) >= o.settings.swipeThreshold ? (0 > n ? r.goToNextSlide() : r.goToPrevSlide(), 
                r.stopAuto()) : x(i, "reset", 200);
            }
            o.viewport.unbind("touchend", D);
        }, q = function() {
            var e = t(window).width(), i = t(window).height();
            (a != e || h != i) && (a = e, h = i, r.redrawSlider(), o.settings.onSliderResize.call(r, o.active.index));
        };
        return r.goToSlide = function(e, i) {
            if (!o.working && o.active.index != e) if (o.working = !0, o.oldIndex = o.active.index, 
            o.active.index = 0 > e ? v() - 1 : e >= v() ? 0 : e, o.settings.onSlideBefore(o.children.eq(o.active.index), o.oldIndex, o.active.index), 
            "next" == i ? o.settings.onSlideNext(o.children.eq(o.active.index), o.oldIndex, o.active.index) : "prev" == i && o.settings.onSlidePrev(o.children.eq(o.active.index), o.oldIndex, o.active.index), 
            o.active.last = o.active.index >= v() - 1, o.settings.pager && L(o.active.index), 
            o.settings.controls && O(), "fade" == o.settings.mode) o.settings.adaptiveHeight && o.viewport.height() != p() && o.viewport.animate({
                height: p()
            }, o.settings.adaptiveHeightSpeed), o.children.filter(":visible").fadeOut(o.settings.speed).css({
                zIndex: 0
            }), o.children.eq(o.active.index).css("zIndex", o.settings.slideZIndex + 1).fadeIn(o.settings.speed, function() {
                t(this).css("zIndex", o.settings.slideZIndex), M();
            }); else {
                o.settings.adaptiveHeight && o.viewport.height() != p() && o.viewport.animate({
                    height: p()
                }, o.settings.adaptiveHeightSpeed);
                var n = 0, s = {
                    left: 0,
                    top: 0
                };
                if (!o.settings.infiniteLoop && o.carousel && o.active.last) if ("horizontal" == o.settings.mode) s = (d = o.children.eq(o.children.length - 1)).position(), 
                n = o.viewport.width() - d.outerWidth(); else {
                    var a = o.children.length - o.settings.minSlides;
                    s = o.children.eq(a).position();
                } else if (o.carousel && o.active.last && "prev" == i) {
                    var h = 1 == o.settings.moveSlides ? o.settings.maxSlides - y() : (v() - 1) * y() - (o.children.length - o.settings.maxSlides), d = r.children(".bx-clone").eq(h);
                    s = d.position();
                } else if ("next" == i && 0 == o.active.index) s = r.find("> .bx-clone").eq(o.settings.maxSlides).position(), 
                o.active.last = !1; else if (e >= 0) {
                    var l = e * y();
                    s = o.children.eq(l).position();
                }
                if (void 0 !== s) {
                    var u = "horizontal" == o.settings.mode ? -(s.left - n) : -s.top;
                    x(u, "slide", o.settings.speed);
                }
            }
        }, r.goToNextSlide = function() {
            if (o.settings.infiniteLoop || !o.active.last) {
                var t = parseInt(o.active.index) + 1;
                r.goToSlide(t, "next");
            }
        }, r.goToPrevSlide = function() {
            if (o.settings.infiniteLoop || 0 != o.active.index) {
                var t = parseInt(o.active.index) - 1;
                r.goToSlide(t, "prev");
            }
        }, r.startAuto = function(t) {
            o.interval || (o.interval = setInterval(function() {
                "next" == o.settings.autoDirection ? r.goToNextSlide() : r.goToPrevSlide();
            }, o.settings.pause), o.settings.autoControls && 1 != t && k("stop"));
        }, r.stopAuto = function(t) {
            o.interval && (clearInterval(o.interval), o.interval = null, o.settings.autoControls && 1 != t && k("start"));
        }, r.getCurrentSlide = function() {
            return o.active.index;
        }, r.getCurrentSlideElement = function() {
            return o.children.eq(o.active.index);
        }, r.getSlideCount = function() {
            return o.children.length;
        }, r.redrawSlider = function() {
            o.children.add(r.find(".bx-clone")).outerWidth(g()), o.viewport.css("height", p()), 
            o.settings.ticker || _(), o.active.last && (o.active.index = v() - 1), o.active.index >= v() && (o.active.last = !0), 
            o.settings.pager && !o.settings.pagerCustom && (w(), L(o.active.index));
        }, r.destroySlider = function() {
            o.initialized && (o.initialized = !1, t(".bx-clone", this).remove(), o.children.each(function() {
                void 0 != t(this).data("origStyle") ? t(this).attr("style", t(this).data("origStyle")) : t(this).removeAttr("style");
            }), void 0 != t(this).data("origStyle") ? this.attr("style", t(this).data("origStyle")) : t(this).removeAttr("style"), 
            t(this).unwrap().unwrap(), o.controls.el && o.controls.el.remove(), o.controls.next && o.controls.next.remove(), 
            o.controls.prev && o.controls.prev.remove(), o.pagerEl && o.settings.controls && o.pagerEl.remove(), 
            t(".bx-caption", this).remove(), o.controls.autoEl && o.controls.autoEl.remove(), 
            clearInterval(o.interval), o.settings.responsive && t(window).unbind("resize", q));
        }, r.reloadSlider = function(t) {
            void 0 != t && (s = t), r.destroySlider(), d();
        }, d(), this;
    };
}(jQuery), function(t, e) {
    "function" == typeof define && define.amd ? define([ "jquery" ], e) : "object" == typeof module && module.exports ? module.exports = e(require("jquery")) : t.Strip = e(jQuery);
}(this, function($) {
    function Spinner() {
        return this.initialize.apply(this, _slice.call(arguments));
    }
    function Timers() {
        return this.initialize.apply(this, _slice.call(arguments));
    }
    function getURIData(t) {
        var e = {
            type: "image"
        };
        return $.each(Types, function(i, n) {
            var s = n.data(t);
            s && (e = s, e.type = i, e.url = t);
        }), e;
    }
    function detectExtension(t) {
        var e = (t || "").replace(/\?.*/g, "").match(/\.([^.]{3,4})$/);
        return e ? e[1].toLowerCase() : null;
    }
    function View() {
        this.initialize.apply(this, _slice.call(arguments));
    }
    var Strip = {
        version: "1.6.4"
    };
    Strip.Skins = {
        strip: {}
    };
    var Browser = function(t) {
        function e(e) {
            var i = new RegExp(e + "([\\d.]+)").exec(t);
            return !i || parseFloat(i[1]);
        }
        return {
            IE: !(!window.attachEvent || -1 !== t.indexOf("Opera")) && e("MSIE "),
            Opera: t.indexOf("Opera") > -1 && (!!window.opera && opera.version && parseFloat(opera.version()) || 7.55),
            WebKit: t.indexOf("AppleWebKit/") > -1 && e("AppleWebKit/"),
            Gecko: t.indexOf("Gecko") > -1 && -1 === t.indexOf("KHTML") && e("rv:"),
            MobileSafari: !!t.match(/Apple.*Mobile.*Safari/),
            Chrome: t.indexOf("Chrome") > -1 && e("Chrome/"),
            ChromeMobile: t.indexOf("CrMo") > -1 && e("CrMo/"),
            Android: t.indexOf("Android") > -1 && e("Android "),
            IEMobile: t.indexOf("IEMobile") > -1 && e("IEMobile/")
        };
    }(navigator.userAgent), _slice = Array.prototype.slice, Fit = {
        within: function(t, e) {
            for (var i = $.extend({
                height: !0,
                width: !0
            }, arguments[2] || {}), n = $.extend({}, e), s = 1, o = 5, r = {
                width: i.width,
                height: i.height
            }; o > 0 && (r.width && n.width > t.width || r.height && n.height > t.height); ) {
                var a = 1, h = 1;
                r.width && n.width > t.width && (a = t.width / n.width), r.height && n.height > t.height && (h = t.height / n.height);
                s = Math.min(a, h);
                n = {
                    width: Math.round(e.width * s),
                    height: Math.round(e.height * s)
                }, o--;
            }
            return n.width = Math.max(n.width, 0), n.height = Math.max(n.height, 0), n;
        }
    };
    $.extend($.easing, {
        stripEaseInCubic: function(t, e, i, n, s) {
            return n * (e /= s) * e * e + i;
        },
        stripEaseInSine: function(t, e, i, n, s) {
            return -n * Math.cos(e / s * (Math.PI / 2)) + n + i;
        },
        stripEaseOutSine: function(t, e, i, n, s) {
            return n * Math.sin(e / s * (Math.PI / 2)) + i;
        }
    });
    var Support = function() {
        function t(t, e) {
            for (var n in t) if (void 0 !== i.style[t[n]]) return "prefix" != e || t[n];
            return !1;
        }
        function e(e, i) {
            var s = e.charAt(0).toUpperCase() + e.substr(1);
            return t((e + " " + n.join(s + " ") + s).split(" "), i);
        }
        var i = document.createElement("div"), n = "Webkit Moz O ms Khtml".split(" ");
        return {
            css: {
                animation: e("animation"),
                transform: e("transform"),
                prefixed: function(t) {
                    return e(t, "prefix");
                }
            },
            svg: !!document.createElementNS && !!document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect,
            touch: function() {
                try {
                    return !!("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch);
                } catch (t) {
                    return !1;
                }
            }()
        };
    }();
    Support.mobileTouch = Support.touch && (Browser.MobileSafari || Browser.Android || Browser.IEMobile || Browser.ChromeMobile || !/^(Win|Mac|Linux)/.test(navigator.platform));
    var Bounds = {
        viewport: function() {
            var t = {
                width: $(window).width()
            };
            if (Browser.MobileSafari || Browser.Android && Browser.Gecko) {
                var e = document.documentElement.clientWidth / window.innerWidth;
                t.height = window.innerHeight * e;
            } else t.height = $(window).height();
            return t;
        }
    }, ImageReady = function(t) {
        var e = function() {
            return this.initialize.apply(this, Array.prototype.slice.call(arguments));
        };
        t.extend(e.prototype, {
            initialize: function() {
                this.options = t.extend({
                    test: function() {},
                    success: function() {},
                    timeout: function() {},
                    callAt: !1,
                    intervals: [ [ 0, 0 ], [ 1e3, 10 ], [ 2e3, 50 ], [ 4e3, 100 ], [ 2e4, 500 ] ]
                }, arguments[0] || {}), this._test = this.options.test, this._success = this.options.success, 
                this._timeout = this.options.timeout, this._ipos = 0, this._time = 0, this._delay = this.options.intervals[this._ipos][1], 
                this._callTimeouts = [], this.poll(), this._createCallsAt();
            },
            poll: function() {
                this._polling = setTimeout(t.proxy(function() {
                    if (this._test()) this.success(); else {
                        if (this._time += this._delay, this._time >= this.options.intervals[this._ipos][0]) {
                            if (!this.options.intervals[this._ipos + 1]) return void ("function" == t.type(this._timeout) && this._timeout());
                            this._ipos++, this._delay = this.options.intervals[this._ipos][1];
                        }
                        this.poll();
                    }
                }, this), this._delay);
            },
            success: function() {
                this.abort(), this._success();
            },
            _createCallsAt: function() {
                this.options.callAt && t.each(this.options.callAt, t.proxy(function(e, i) {
                    var n = i[0], s = i[1], o = setTimeout(t.proxy(function() {
                        s();
                    }, this), n);
                    this._callTimeouts.push(o);
                }, this));
            },
            _stopCallTimeouts: function() {
                t.each(this._callTimeouts, function(t, e) {
                    clearTimeout(e);
                }), this._callTimeouts = [];
            },
            abort: function() {
                this._stopCallTimeouts(), this._polling && (clearTimeout(this._polling), this._polling = null);
            }
        });
        var i = function() {
            return this.initialize.apply(this, Array.prototype.slice.call(arguments));
        };
        return t.extend(i.prototype, {
            supports: {
                naturalWidth: "naturalWidth" in new Image()
            },
            initialize: function(e, i, n) {
                return this.img = t(e)[0], this.successCallback = i, this.errorCallback = n, this.isLoaded = !1, 
                this.options = t.extend({
                    method: "onload",
                    pollFallbackAfter: 1e3
                }, arguments[3] || {}), "onload" != this.options.method && this.supports.naturalWidth ? void this.poll() : void this.load();
            },
            poll: function() {
                this._poll = new e({
                    test: t.proxy(function() {
                        return this.img.naturalWidth > 0;
                    }, this),
                    success: t.proxy(function() {
                        this.success();
                    }, this),
                    timeout: t.proxy(function() {
                        this.error();
                    }, this),
                    callAt: [ [ this.options.pollFallbackAfter, t.proxy(function() {
                        this.load();
                    }, this) ] ]
                });
            },
            load: function() {
                this._loading = setTimeout(t.proxy(function() {
                    var e = new Image();
                    this._onloadImage = e, e.onload = t.proxy(function() {
                        e.onload = function() {}, this.supports.naturalWidth || (this.img.naturalWidth = e.width, 
                        this.img.naturalHeight = e.height, e.naturalWidth = e.width, e.naturalHeight = e.height), 
                        this.success();
                    }, this), e.onerror = t.proxy(this.error, this), e.src = this.img.src;
                }, this));
            },
            success: function() {
                this._calledSuccess || (this._calledSuccess = !0, this.abort(), this.waitForRender(t.proxy(function() {
                    this.isLoaded = !0, this.successCallback(this);
                }, this)));
            },
            error: function() {
                this._calledError || (this._calledError = !0, this.abort(), this._errorRenderTimeout = setTimeout(t.proxy(function() {
                    this.errorCallback && this.errorCallback(this);
                }, this)));
            },
            abort: function() {
                this.stopLoading(), this.stopPolling(), this.stopWaitingForRender();
            },
            stopPolling: function() {
                this._poll && (this._poll.abort(), this._poll = null);
            },
            stopLoading: function() {
                this._loading && (clearTimeout(this._loading), this._loading = null), this._onloadImage && (this._onloadImage.onload = function() {}, 
                this._onloadImage.onerror = function() {});
            },
            waitForRender: function(t) {
                this._renderTimeout = setTimeout(t);
            },
            stopWaitingForRender: function() {
                this._renderTimeout && (clearTimeout(this._renderTimeout), this._renderTimeout = null), 
                this._errorRenderTimeout && (clearTimeout(this._errorRenderTimeout), this._errorRenderTimeout = null);
            }
        }), i;
    }(jQuery);
    Spinner.supported = Support.css.transform && Support.css.animation, $.extend(Spinner.prototype, {
        initialize: function(t) {
            this.element = $(t), this.element[0] && (this.classPrefix = "strp-", this.setOptions(arguments[1] || {}), 
            this.element.addClass(this.classPrefix + "spinner"), this.element.append(this._rotate = $("<div>").addClass(this.classPrefix + "spinner-rotate")), 
            this.build(), this.start());
        },
        setOptions: function(t) {
            this.options = $.extend({
                show: 200,
                hide: 200
            }, t || {});
        },
        build: function() {
            if (!this._build) {
                this._rotate.html("");
                var t = (this.options.length, this.options.radius, this.element.is(":visible"));
                t || this.element.show();
                this._rotate.append(s = $("<div>").addClass(this.classPrefix + "spinner-frame").append(o = $("<div>").addClass(this.classPrefix + "spinner-line")));
                var e = parseInt($(o).css("z-index"));
                this.lines = e, o.css({
                    "z-index": "inherit"
                }), s.remove(), t || this.element.hide();
                for (var i, n = 0; e > n; n++) {
                    var s, o;
                    this._rotate.append(s = $("<div>").addClass(this.classPrefix + "spinner-frame").append(o = $("<div>").addClass(this.classPrefix + "spinner-line"))), 
                    i = i || o.css("color"), o.css({
                        background: i
                    }), s.css({
                        opacity: (1 / e * (n + 1)).toFixed(2)
                    });
                    var r = {};
                    r[Support.css.prefixed("transform")] = "rotate(" + 360 / e * (n + 1) + "deg)", s.css(r);
                }
                this._build = !0;
            }
        },
        start: function() {
            var t = {};
            t[Support.css.prefixed("animation")] = this.classPrefix + "spinner-spin 1s infinite steps(" + this.lines + ")", 
            this._rotate.css(t);
        },
        stop: function() {
            var t = {};
            t[Support.css.prefixed("animation")] = "none", this._rotate.css(t);
        },
        show: function(t) {
            this.build(), this.start(), this.element.stop(!0).fadeTo(this.options.show, 1, t);
        },
        hide: function(t) {
            this.element.stop(!0).fadeOut(this.options.hide, $.proxy(function() {
                this.stop(), t && t();
            }, this));
        },
        refresh: function() {
            this._build = !1, this.build();
        }
    }), $.extend(Timers.prototype, {
        initialize: function() {
            this._timers = {};
        },
        set: function(t, e, i) {
            this._timers[t] = setTimeout(e, i);
        },
        get: function(t) {
            return this._timers[t];
        },
        clear: function(t) {
            t ? this._timers[t] && (clearTimeout(this._timers[t]), delete this._timers[t]) : this.clearAll();
        },
        clearAll: function() {
            $.each(this._timers, function(t, e) {
                clearTimeout(e);
            }), this._timers = {};
        }
    });
    var Types = {
        image: {
            extensions: "bmp gif jpeg jpg png webp",
            detect: function(t) {
                return $.inArray(detectExtension(t), this.extensions.split(" ")) > -1;
            },
            data: function(t) {
                return !!this.detect() && {
                    extension: detectExtension(t)
                };
            }
        },
        youtube: {
            detect: function(t) {
                var e = /(youtube\.com|youtu\.be)\/watch\?(?=.*vi?=([a-zA-Z0-9-_]+))(?:\S+)?$/.exec(t);
                return e && e[2] ? e[2] : !(!(e = /(youtube\.com|youtu\.be)\/(vi?\/|u\/|embed\/)?([a-zA-Z0-9-_]+)(?:\S+)?$/i.exec(t)) || !e[3]) && e[3];
            },
            data: function(t) {
                var e = this.detect(t);
                return !!e && {
                    id: e
                };
            }
        },
        vimeo: {
            detect: function(t) {
                var e = /(vimeo\.com)\/([a-zA-Z0-9-_]+)(?:\S+)?$/i.exec(t);
                return !(!e || !e[2]) && e[2];
            },
            data: function(t) {
                var e = this.detect(t);
                return !!e && {
                    id: e
                };
            }
        }
    }, VimeoReady = function() {
        var t = function() {
            return this.initialize.apply(this, _slice.call(arguments));
        };
        $.extend(t.prototype, {
            initialize: function(t, e) {
                this.url = t, this.callback = e, this.load();
            },
            load: function() {
                var t = e.get(this.url);
                if (t) return this.callback(t.data);
                var i = "http" + (window.location && "https:" == window.location.protocol ? "s" : "") + ":", n = getURIData(this.url).id;
                this._xhr = $.getJSON(i + "//vimeo.com/api/oembed.json?url=" + i + "//vimeo.com/" + n + "&maxwidth=9999999&maxheight=9999999&callback=?", $.proxy(function(t) {
                    var i = {
                        dimensions: {
                            width: t.width,
                            height: t.height
                        }
                    };
                    e.set(this.url, i), this.callback && this.callback(i);
                }, this));
            },
            abort: function() {
                this._xhr && (this._xhr.abort(), this._xhr = null);
            }
        });
        var e = {
            cache: [],
            get: function(t) {
                for (var e = null, i = 0; i < this.cache.length; i++) this.cache[i] && this.cache[i].url == t && (e = this.cache[i]);
                return e;
            },
            set: function(t, e) {
                this.remove(t), this.cache.push({
                    url: t,
                    data: e
                });
            },
            remove: function(t) {
                for (var e = 0; e < this.cache.length; e++) this.cache[e] && this.cache[e].url == t && delete this.cache[e];
            }
        };
        return t;
    }(), Options = {
        defaults: {
            effects: {
                spinner: {
                    show: 200,
                    hide: 200
                },
                transition: {
                    min: 175,
                    max: 250
                },
                ui: {
                    show: 0,
                    hide: 200
                },
                window: {
                    show: 300,
                    hide: 300
                }
            },
            hideOnClickOutside: !0,
            keyboard: {
                left: !0,
                right: !0,
                esc: !0
            },
            loop: !0,
            overlap: !0,
            preload: [ 1, 2 ],
            position: !0,
            skin: "strip",
            side: "right",
            spinner: !0,
            toggle: !0,
            uiDelay: 3e3,
            vimeo: {
                autoplay: 1,
                api: 1,
                title: 1,
                byline: 1,
                portrait: 0,
                loop: 0
            },
            youtube: {
                autoplay: 1,
                controls: 1,
                enablejsapi: 1,
                hd: 1,
                iv_load_policy: 3,
                loop: 0,
                modestbranding: 1,
                rel: 0,
                vq: "hd1080"
            },
            initialTypeOptions: {
                image: {},
                vimeo: {
                    width: 1280
                },
                youtube: {
                    width: 1280,
                    height: 720
                }
            }
        },
        create: function(t, e, i) {
            t = t || {}, i = i || {}, t.skin = t.skin || this.defaults.skin;
            var n = t.skin ? $.extend({}, Strip.Skins[t.skin] || Strip.Skins[this.defaults.skin]) : {}, s = $.extend(!0, {}, this.defaults, n);
            s.initialTypeOptions && (e && s.initialTypeOptions[e] && (s = $.extend(!0, {}, s.initialTypeOptions[e], s)), 
            delete s.initialTypeOptions);
            var o = $.extend(!0, {}, s, t);
            return (!o.effects || Browser.IE && Browser.IE < 9) && (o.effects = {}, $.each(this.defaults.effects, function(t, e) {
                $.each(o.effects[t] = $.extend({}, e), function(e) {
                    o.effects[t][e] = 0;
                });
            }), o.spinner = !1), o.keyboard && ("boolean" == $.type(o.keyboard) && (o.keyboard = {}, 
            $.each(this.defaults.keyboard, function(t) {
                o.keyboard[t] = !0;
            })), ("vimeo" == e || "youtube" == e) && $.extend(o.keyboard, {
                left: !1,
                right: !1
            })), ("vimeo" == e || "youtube" == e) && (o.overlap = !1), o;
        }
    };
    $.extend(View.prototype, {
        initialize: function(object) {
            var options = arguments[1] || {}, data = {};
            if ("string" == $.type(object)) object = {
                url: object
            }; else if (object && 1 == object.nodeType) {
                var element = $(object);
                object = {
                    element: element[0],
                    url: element.attr("href"),
                    caption: element.data("strip-caption"),
                    group: element.data("strip-group"),
                    extension: element.data("strip-extension"),
                    type: element.data("strip-type"),
                    options: element.data("strip-options") && eval("({" + element.data("strip-options") + "})") || {}
                };
            }
            if (object && (object.extension || (object.extension = detectExtension(object.url)), 
            !object.type)) {
                var data = getURIData(object.url);
                object._data = data, object.type = data.type;
            }
            return object._data || (object._data = getURIData(object.url)), object.options = object && object.options ? $.extend(!0, $.extend({}, options), $.extend({}, object.options)) : $.extend({}, options), 
            object.options = Options.create(object.options, object.type, object._data), $.extend(this, object), 
            this;
        }
    });
    var Pages = {
        initialize: function(t) {
            this.element = t, this.pages = {}, this.uid = 1;
        },
        add: function(t) {
            this.uid++, this.views = t, this.pages[this.uid] = [], Window._showUIOnResize = !0, 
            $.each(t, $.proxy(function(t, e) {
                this.pages[this.uid].push(new Page(e, t + 1, this.views.length));
            }, this));
        },
        show: function(t, e) {
            var i = this.pages[this.uid][t - 1];
            return this.page && this.page.uid == i.uid ? void (i.view.options.toggle && (Window.hide(), 
            this.page = null)) : (Pages.setActiveClass(i), this.page = i, this.removeHiddenAndLoadingInactive(), 
            void i.show($.proxy(function() {
                this._switched = !1, e && e();
            }, this)));
        },
        getLoadingCount: function() {
            var t = 0;
            return $.each(this.pages, function(e, i) {
                $.each(i, function(e, i) {
                    i.loading && t++;
                });
            }), t;
        },
        getPositionInActivePageGroup: function(t) {
            var e = 0, i = this.pages[this.uid];
            return i && $.each(i, function(i, n) {
                n.view.element && n.view.element == t && (e = i + 1);
            }), e;
        },
        removeExpired: function(t) {
            $.each(this.pages, function(e, i) {
                e != this._id && $.each(i, function(e, i) {
                    i.remove(t);
                });
            });
        },
        removeAll: function() {
            $.each(this.pages, function(t, e) {
                $.each(e, function(t, e) {
                    e.remove();
                });
            }), this.pages = {};
        },
        hideVisibleInactive: function(t) {
            $.each(this.pages, $.proxy(function(e, i) {
                $.each(i, $.proxy(function(e, i) {
                    i.uid != this.page.uid && i.hide(null, t);
                }, this));
            }, this));
        },
        stopInactive: function() {
            $.each(this.pages, $.proxy(function(t, e) {
                $.each(e, $.proxy(function(t, e) {
                    e.uid == this.page.uid || e.preloading || e.stop();
                }, this));
            }, this));
        },
        removeHiddenAndLoadingInactive: function() {
            var t = [];
            $.each(this.pages, $.proxy(function(e, i) {
                if (e != this.uid) {
                    var n = 0;
                    $.each(i, $.proxy(function(t, e) {
                        e.visible && !e.loading || e.animatingWindow || e.remove(), e.removed && n++;
                    }, this)), n == i.length && t.push(e);
                }
            }, this)), $.each(t, $.proxy(function(t, e) {
                delete this.pages[e];
            }, this));
        },
        stop: function() {
            $.each(this.pages, function(t, e) {
                $.each(e, function(t, e) {
                    e.stop();
                });
            });
        },
        setActiveClass: function(t) {
            this.removeActiveClasses();
            var e = t.view.element;
            if (e) {
                $(e).addClass("strip-active-element strip-active-group");
                var i = $(e).data("strip-group");
                i && $('.strip[data-strip-group="' + i + '"]').addClass("strip-active-group");
            }
        },
        removeActiveClasses: function() {
            $(".strip-active-group").removeClass("strip-active-group strip-active-element");
        }
    }, Page = function() {
        function t() {
            return this.initialize.apply(this, _slice.call(arguments));
        }
        var e = 0, i = {};
        return $.extend(t.prototype, {
            initialize: function(t, i, n) {
                this.view = t, this.dimensions = {
                    width: 0,
                    height: 0
                }, this.uid = e++, this._position = i, this._total = n, this.animated = !1, this.visible = !1, 
                this.queues = {}, this.queues.showhide = $({});
            },
            create: function() {
                if (!this._created) {
                    Pages.element.append(this.element = $("<div>").addClass("strp-page").append(this.container = $("<div>").addClass("strp-container")).css({
                        opacity: 0
                    }).hide());
                    var t = this.view.options.position && this._total > 1;
                    switch ((this.view.caption || t) && (this.element.append(this.info = $("<div>").addClass("strp-info").append(this.info_padder = $("<div>").addClass("strp-info-padder"))), 
                    t && (this.element.addClass("strp-has-position"), this.info_padder.append($("<div>").addClass("strp-position").html(this._position + " / " + this._total))), 
                    this.view.caption && this.info_padder.append(this.caption = $("<div>").addClass("strp-caption").html(this.view.caption))), 
                    this.view.type) {
                      case "image":
                        this.container.append(this.content = $("<img>").attr({
                            src: this.view.url
                        }));
                        break;

                      case "vimeo":
                      case "youtube":
                        this.container.append(this.content = $("<div>"));
                    }
                    this.element.addClass("strp" + (this.view.options.overlap ? "" : "-no") + "-overlap"), 
                    this._total < 2 && this.element.addClass("strp-no-sides"), this.content.addClass("strp-content-element"), 
                    this._created = !0;
                }
            },
            _getSurroundingPages: function() {
                var t;
                if (!(t = this.view.options.preload)) return [];
                for (var e = [], i = Math.max(1, this._position - t[0]), n = Math.min(this._position + t[1], this._total), s = this._position, o = s; n >= o; o++) (r = Pages.pages[Pages.uid][o - 1])._position != s && e.push(r);
                for (o = s; o >= i; o--) {
                    var r = Pages.pages[Pages.uid][o - 1];
                    r._position != s && e.push(r);
                }
                return e;
            },
            preloadSurroundingImages: function() {
                var t = this._getSurroundingPages();
                $.each(t, $.proxy(function(t, e) {
                    e.preload();
                }, this));
            },
            preload: function() {
                this.preloading || this.preloaded || "image" != this.view.type || !this.view.options.preload || this.loaded || (this.create(), 
                this.preloading = !0, new ImageReady(this.content[0], $.proxy(function(t) {
                    this.loaded = !0, this.preloading = !1, this.preloaded = !0, this.dimensions = {
                        width: t.img.naturalWidth,
                        height: t.img.naturalHeight
                    };
                }, this), null, {
                    method: "naturalWidth"
                }));
            },
            load: function(t) {
                if (this.create(), this.loaded) t && t(); else switch (this.abort(), this.loading = !0, 
                this.view.options.spinner && !i[this.view.url] && Window.startLoading(), this.view.type) {
                  case "image":
                    if (this.error) return void (t && t());
                    this.imageReady = new ImageReady(this.content[0], $.proxy(function(e) {
                        this._markAsLoaded(), this.dimensions = {
                            width: e.img.naturalWidth,
                            height: e.img.naturalHeight
                        }, t && t();
                    }, this), $.proxy(function() {
                        this._markAsLoaded(), this.content.hide(), this.container.append(this.error = $("<div>").addClass("strp-error")), 
                        this.element.addClass("strp-has-error"), this.dimensions = {
                            width: this.error.outerWidth(),
                            height: this.error.outerHeight()
                        }, t && t();
                    }, this), {
                        method: "naturalWidth"
                    });
                    break;

                  case "vimeo":
                    this.vimeoReady = new VimeoReady(this.view.url, $.proxy(function(e) {
                        this._markAsLoaded(), this.dimensions = {
                            width: e.dimensions.width,
                            height: e.dimensions.height
                        }, t && t();
                    }, this));
                    break;

                  case "youtube":
                    this._markAsLoaded(), this.dimensions = {
                        width: this.view.options.width,
                        height: this.view.options.height
                    }, t && t();
                }
            },
            _markAsLoaded: function() {
                this.loading = !1, this.loaded = !0, i[this.view.url] = !0, Window.stopLoading();
            },
            isVideo: function() {
                return /^(youtube|vimeo)$/.test(this.view.type);
            },
            insertVideo: function(t) {
                if (!this.playerIframe && this.isVideo()) {
                    var e = "http" + (window.location && "https:" == window.location.protocol ? "s" : "") + ":", i = $.extend({}, this.view.options[this.view.type] || {}), n = $.param(i), s = {
                        vimeo: e + "//player.vimeo.com/video/{id}?{queryString}",
                        youtube: e + "//www.youtube.com/embed/{id}?{queryString}"
                    }[this.view.type].replace("{id}", this.view._data.id).replace("{queryString}", n);
                    this.content.append(this.playerIframe = $("<iframe webkitAllowFullScreen mozallowfullscreen allowFullScreen>").attr({
                        src: s,
                        height: this.contentDimensions.height,
                        width: this.contentDimensions.width,
                        frameborder: 0
                    })), t && t();
                } else t && t();
            },
            raise: function() {
                var t = Pages.element[0].lastChild;
                t && t == this.element[0] || Pages.element.append(this.element);
            },
            show: function(t) {
                var e = this.queues.showhide;
                e.queue([]), this.animated = !0, this.animatingWindow = !1, e.queue(function(t) {
                    Pages.stopInactive(), t();
                }), e.queue($.proxy(function(t) {
                    Window.setSide(this.view.options.side, t);
                }, this)), e.queue($.proxy(function(t) {
                    this.view.options.spinner && Window._spinner && (Window.setSpinnerSkin(this.view.options.skin), 
                    Window._spinner.setOptions(this.view.options.effects.spinner), Window._spinner.refresh()), 
                    this.load($.proxy(function() {
                        this.preloadSurroundingImages(), t();
                    }, this));
                }, this)), e.queue($.proxy(function(t) {
                    this.raise(), Window.setSkin(this.view.options.skin), Window.bindUI(), Keyboard.enable(this.view.options.keyboard), 
                    this.fitToWindow(), t();
                }, this)), e.queue($.proxy(function(t) {
                    Window.timers.set("bind-hide-on-click-outside", $.proxy(function() {
                        Window.bindHideOnClickOutside(), t();
                    }, this), 1);
                }, this)), this.isVideo() && e.queue($.proxy(function(t) {
                    this.insertVideo($.proxy(function() {
                        t();
                    }));
                }, this)), e.queue($.proxy(function(t) {
                    this.animatingWindow = !0;
                    var e = 3, i = "horizontal" == this.getOrientation() ? "width" : "height", n = this.view && this.view.options.onShow;
                    "function" == $.type(n) && n.call(Strip);
                    var s = Window.resize(this[i], function() {
                        --e < 1 && t();
                    }, s);
                    this._show(function() {
                        --e < 1 && t();
                    }, s), Window.adjustPrevNext(function() {
                        --e < 1 && t();
                    }, s), Window._showUIOnResize && (Window.showUI(null, s), Window._showUIOnResize = !1), 
                    Pages.hideVisibleInactive(s);
                }, this)), e.queue($.proxy(function(e) {
                    this.animatingWindow = !1, this.animated = !1, this.visible = !0, t && t(), e();
                }, this));
            },
            _show: function(t, e) {
                var i = Window.visible ? "number" == $.type(e) ? e : this.view.options.effects.transition.min : 0;
                this.element.stop(!0).show().fadeTo(i || 0, 1, t);
            },
            hide: function(t, e) {
                if (this.element) {
                    this.removeVideo(), this.abort();
                    var i = this.view.options.effects.transition.min;
                    "number" == $.type(e) && (i = e), this.isVideo() && (i = 0), this.element.stop(!0).fadeTo(i, 0, "stripEaseInCubic", $.proxy(function() {
                        this.element.hide(), this.visible = !1, t && t();
                    }, this));
                }
            },
            stop: function() {
                this.queues.showhide.queue([]), this.element && this.element.stop(!0), this.abort();
            },
            removeVideo: function() {
                this.playerIframe && (this.playerIframe[0].src = "//about:blank", this.playerIframe.remove(), 
                this.playerIframe = null);
            },
            remove: function() {
                this.stop(), this.removeVideo(), this.element && this.element.remove(), this.visible = !1, 
                this.removed = !0;
            },
            abort: function() {
                this.imageReady && !this.preloading && (this.imageReady.abort(), this.imageReady = null), 
                this.vimeoReady && (this.vimeoReady.abort(), this.vimeoReady = null), this.loading = !1, 
                Window.stopLoading();
            },
            _getDimensionsFitToView: function() {
                var t = $.extend({}, this.dimensions), e = $.extend({}, this.dimensions), i = this.view.options;
                return i.maxWidth && (t.width = i.maxWidth), i.maxHeight && (t.heigth = i.maxHeight), 
                e = Fit.within(t, e);
            },
            getOrientation: function() {
                return "left" == this.view.options.side || "right" == this.view.options.side ? "horizontal" : "vertical";
            },
            fitToWindow: function() {
                var t = this.element, e = this._getDimensionsFitToView(), i = Bounds.viewport(), n = $.extend({}, i), s = "horizontal" == this.getOrientation() ? "width" : "height", o = t.find(".strp-container");
                Window.element.removeClass("strp-measured");
                var r = Window.element, a = "width" == s ? parseInt(r.css("min-width")) > 0 : parseInt(r.css("min-height")) > 0, h = a ? 0 : parseInt(r.css("margin-" + ("width" == s ? "left" : "bottom")));
                Window.element.addClass("strp-measured"), n[s] -= h;
                var d = parseInt(o.css("padding-left")) + parseInt(o.css("padding-right")), l = parseInt(o.css("padding-top")) + parseInt(o.css("padding-bottom"));
                n.width -= d, n.height -= l;
                var u = Fit.within(n, e), c = $.extend({}, u), p = this.content;
                this.error && (p = this.error);
                var f = this.info, g = 0;
                if (f) {
                    var m = Window.element.is(":visible");
                    m || Window.element.show();
                    var v = t.is(":visible");
                    if (v || t.show(), "width" == s) {
                        t.css({
                            width: a ? i.width : u.width + d
                        });
                        var y = n.height;
                        p.hide(), g = f.outerHeight(), p.show(), n.height = y - g, c = Fit.within(n, e);
                        for (var _, x, w, b = $.extend({}, c), S = g, I = a ? 0 : 4; I > 0 && (w = u.width - c.width); ) t.css({
                            width: u.width + d - w
                        }), x = g, p.hide(), g = f.outerHeight(), _ = Math.max(this.caption ? this.caption.outerWidth() + d : 0, this.position ? this.position.outerWidth() + d : 0), 
                        p.show(), g == x && _ <= u.width + d - w ? u.width -= w : (n.height = y - g, c = Fit.within(n, e), 
                        0 >= I - 1 && (t.css({
                            width: u.width + d
                        }), c = b, g = S)), I--;
                    } else Browser.IE && Browser.IE < 8 && t.css({
                        width: i.width
                    }), p.hide(), g = f.outerHeight(), p.show(), n.height -= g, c = Fit.within(n, e), 
                    u.height = c.height;
                    v || t.hide(), m || Window.element.hide();
                }
                var C = {
                    width: u.width + d,
                    height: u.height + l + g
                };
                a && (C = i), t.css("width" == s ? {
                    width: C.width
                } : {
                    height: C.height
                }), o.css({
                    bottom: g
                });
                var z = -.5 * c.width, T = -.5 * c.height;
                Browser.IE && Browser.IE < 8 && (z = Math.floor(z), T = Math.floor(T)), p.css($.extend({}, c, {
                    "margin-left": z,
                    "margin-top": T
                })), this.playerIframe && this.playerIframe.attr(c), this.contentDimensions = c, 
                this.width = C.width, this.height = C.height, this.z = this[s];
            }
        }), t;
    }(), Window = {
        initialize: function() {
            this.queues = [], this.queues.hide = $({}), this.pages = [], this.timers = new Timers(), 
            this.build(), this.setSkin(Options.defaults.skin);
        },
        build: function() {
            Spinner.supported && ($(document.body).append(this.spinnerMove = $("<div>").addClass("strp-spinner-move").hide().append(this.spinner = $("<div>").addClass("strp-spinner"))), 
            this._spinner = new Spinner(this.spinner), this._spinnerMoveSkinless = this.spinnerMove[0].className), 
            $(document.body).append(this.element = $("<div>").addClass("strp-window strp-measured").append(this._pages = $("<div>").addClass("strp-pages")).append(this._previous = $("<div>").addClass("strp-nav strp-nav-previous").append($("<div>").addClass("strp-nav-button").append($("<div>").addClass("strp-nav-button-background")).append($("<div>").addClass("strp-nav-button-icon"))).hide()).append(this._next = $("<div>").addClass("strp-nav strp-nav-next").append($("<div>").addClass("strp-nav-button").append($("<div>").addClass("strp-nav-button-background")).append($("<div>").addClass("strp-nav-button-icon"))).hide()).append(this._close = $("<div>").addClass("strp-close").append($("<div>").addClass("strp-close-background")).append($("<div>").addClass("strp-close-icon")))), 
            Pages.initialize(this._pages), Support.mobileTouch && this.element.addClass("strp-mobile-touch"), 
            Support.svg || this.element.addClass("strp-no-svg"), this._close.on("click", $.proxy(function(t) {
                t.preventDefault(), this.hide();
            }, this)), this._previous.on("click", $.proxy(function(t) {
                this.previous(), this._onMouseMove(t);
            }, this)), this._next.on("click", $.proxy(function(t) {
                this.next(), this._onMouseMove(t);
            }, this)), this.hideUI(null, 0);
        },
        setSkin: function(t) {
            this._skin && this.element.removeClass("strp-window-skin-" + this._skin), this.element.addClass("strp-window-skin-" + t), 
            this._skin = t;
        },
        setSpinnerSkin: function(t) {
            this.spinnerMove && (this._spinnerSkin && this.spinnerMove.removeClass("strp-spinner-move-skin-" + this._spinnerSkin), 
            this.spinnerMove.addClass("strp-spinner-move-skin-" + t), this._spinner.refresh(), 
            this._spinnerSkin = t);
        },
        startObservingResize: function() {
            this._isObservingResize || (this._onWindowResizeHandler = $.proxy(this._onWindowResize, this), 
            $(window).on("resize orientationchange", this._onWindowResizeHandler), this._isObservingResize = !0);
        },
        stopObservingResize: function() {
            this._onWindowResizeHandler && ($(window).off("resize orientationchange", this._onWindowResizeHandler), 
            this._onWindowResizeHandler = null), this._isObservingResize = !1;
        },
        _onWindowResize: function() {
            var t;
            (t = Pages.page) && (t.animated || t.animatingWindow ? (t.fitToWindow(), t.show()) : (t.fitToWindow(), 
            this.resize(t.z, null, 0), this.adjustPrevNext(null, !0)));
        },
        resize: function(t, e, i) {
            var n = "vertical" == this.getOrientation() ? "Height" : "Width", s = n.toLowerCase();
            t > 0 && (this.visible = !0, this.startObservingResize());
            var o, r = Window.element["outer" + n]();
            if (0 == r) o = this.view.options.effects.window.show, this.element.addClass("strp-opening"), 
            this.opening = !0; else if ("number" == $.type(i)) o = i; else {
                var a = this.view.options.effects.transition, h = a.min, d = a.max - h, l = Bounds.viewport(), u = Math.abs(r - t), c = Math.min(1, u / l[s]);
                o = Math.round(h + c * d);
            }
            0 == t && (this.closing = !0, this.element.is(":animated") || this.element.addClass("strp-closing"));
            var p = {
                overflow: "visible"
            };
            p[s] = t;
            var f = 1;
            this._outerWidth = null, this._offsetLeft = null;
            var g = this.view.options.onResize, m = "function" == $.type(g);
            return this.element.stop(!0).animate(p, $.extend({
                duration: o,
                complete: $.proxy(function() {
                    --f < 1 && this._afterResize(e);
                }, this)
            }, m ? {
                step: $.proxy(function(t, e) {
                    e.prop == s && g.call(Strip, e.prop, t, this.side);
                }, this)
            } : {})), this.spinnerMove && (f++, this.spinnerMove.stop(!0).animate(p, o, $.proxy(function() {
                --f < 1 && this._afterResize(e);
            }, this))), o;
        },
        _afterResize: function(t) {
            this.opening = !1, this.closing = !1, this.element.removeClass("strp-opening strp-closing"), 
            this._outerWidth = this.element.outerWidth(), this._offsetLeft = this.element.offset().left, 
            t && t();
        },
        adjustPrevNext: function(t, e) {
            if (this.view && Pages.page) {
                var i = Pages.page, n = this.element.is(":visible");
                n || this.element.show();
                var s = this._previous.attr("style");
                this._previous.removeAttr("style");
                var o = parseInt(this._previous.css("margin-top"));
                this._previous.attr({
                    style: s
                }), n || this.element.hide();
                var r = i.info ? i.info.outerHeight() : 0, a = this._previous.add(this._next), h = {
                    "margin-top": o - .5 * r
                }, d = this.view.options.effects.transition.min;
                "number" == $.type(e) && (d = e), this.opening && (d = 0), a.stop(!0).animate(h, d, t), 
                this._previous[this.mayPrevious() ? "show" : "hide"](), this._next[this.mayNext() ? "show" : "hide"]();
            }
        },
        resetPrevNext: function() {
            this._previous.add(this._next).stop(!0).removeAttr("style");
        },
        load: function(t, e) {
            this.views = t, Pages.add(t), e && this.setPosition(e);
        },
        setSide: function(t, e) {
            if (this.side != t) if (this.visible) {
                var i = this.view ? this.view.options.effects.window.hide : 0;
                this.hideUI(null, i), this.unbindUI(), this.resize(0, $.proxy(function() {
                    this._safeResetsAfterSwitchSide(), Pages.hideVisibleInactive(0), this._setSide(t, e);
                }, this)), this._showUIOnResize = !0;
            } else this._setSide(t, e); else e && e();
        },
        _setSide: function(t, e) {
            this.side = t;
            var i = this.getOrientation(), n = this.element;
            this.spinnerMove && (n = n.add(this.spinnerMove)), n.removeClass("strp-horizontal strp-vertical").addClass("strp-" + i);
            var s = "strp-side-";
            n.removeClass(s + "top " + s + "right " + s + "bottom " + s + "left").addClass(s + t), 
            e && e();
        },
        getOrientation: function() {
            return "left" == this.side || "right" == this.side ? "horizontal" : "vertical";
        },
        startLoading: function() {
            this._spinner && (this.spinnerMove.show(), this._spinner.show());
        },
        stopLoading: function() {
            this._spinner && 1 > Pages.getLoadingCount() && this._spinner.hide($.proxy(function() {
                this.spinnerMove.hide();
            }, this));
        },
        setPosition: function(t, e) {
            this._position = t, this.view = this.views[t - 1], this.stopHideQueue(), this.page = Pages.show(t, $.proxy(function() {
                var i = this.view.options.afterPosition;
                "function" == $.type(i) && i.call(Strip, t), e && e();
            }, this));
        },
        hide: function(t) {
            if (this.view) {
                var e = this.queues.hide;
                e.queue([]), e.queue($.proxy(function(t) {
                    Pages.stop(), t();
                }, this)), e.queue($.proxy(function(t) {
                    var e = this.view ? this.view.options.effects.window.hide : 0;
                    this.unbindUI(), this.hideUI(null, e), this.unbindHideOnClickOutside(), Keyboard.disable(), 
                    t();
                }, this)), e.queue($.proxy(function(t) {
                    Pages.removeActiveClasses(), this.resize(0, t, this.view.options.effects.window.hide), 
                    this._showUIOnResize = !0;
                }, this)), e.queue($.proxy(function(t) {
                    this._safeResetsAfterSwitchSide(), this.stopObservingResize(), Pages.removeAll(), 
                    this.timers.clear(), this._position = -1;
                    var e = this.view && this.view.options.afterHide;
                    "function" == $.type(e) && e.call(Strip), this.view = null, t();
                }, this)), "function" == $.type(t) && e.queue($.proxy(function(e) {
                    t(), e();
                }, this));
            }
        },
        stopHideQueue: function() {
            this.queues.hide.queue([]);
        },
        _safeResetsAfterSwitchSide: function() {
            this.element.removeAttr("style"), this.spinnerMove && this.spinnerMove.removeAttr("style"), 
            this.visible = !1, this.hideUI(null, 0), this.timers.clear("ui"), this.resetPrevNext(), 
            this._x = -1, this._y = -1;
        },
        mayPrevious: function() {
            return this.view && this.view.options.loop && this.views && this.views.length > 1 || 1 != this._position;
        },
        previous: function(t) {
            var e = this.mayPrevious();
            (t || e) && this.setPosition(this.getSurroundingIndexes().previous);
        },
        mayNext: function() {
            var t = this.views && this.views.length > 1;
            return this.view && this.view.options.loop && t || t && 1 != this.getSurroundingIndexes().next;
        },
        next: function(t) {
            var e = this.mayNext();
            (t || e) && this.setPosition(this.getSurroundingIndexes().next);
        },
        getSurroundingIndexes: function() {
            if (!this.views) return {};
            var t = this._position, e = this.views.length;
            return {
                previous: 1 >= t ? e : t - 1,
                next: t >= e ? 1 : t + 1
            };
        },
        bindHideOnClickOutside: function() {
            this.unbindHideOnClickOutside(), $(document.documentElement).on("click", this._delegateHideOutsideHandler = $.proxy(this._delegateHideOutside, this));
        },
        unbindHideOnClickOutside: function() {
            this._delegateHideOutsideHandler && ($(document.documentElement).off("click", this._delegateHideOutsideHandler), 
            this._delegateHideOutsideHandler = null);
        },
        _delegateHideOutside: function(t) {
            var e = Pages.page;
            if (this.visible && e && e.view.options.hideOnClickOutside) {
                var i = t.target;
                $(i).closest(".strip, .strp-window")[0] || this.hide();
            }
        },
        bindUI: function() {
            this.unbindUI(), Support.mobileTouch || (this.element.on("mouseenter", this._showUIHandler = $.proxy(this.showUI, this)).on("mouseleave", this._hideUIHandler = $.proxy(this.hideUI, this)), 
            this.element.on("mousemove", this._mousemoveUIHandler = $.proxy(function(t) {
                var e = t.pageX, i = t.pageY;
                this._hoveringNav || i == this._y && e == this._x || (this._x = e, this._y = i, 
                this.showUI(), this.startUITimer());
            }, this)), this._pages.on("mousemove", ".strp-container", this._onMouseMoveHandler = $.proxy(this._onMouseMove, this)).on("mouseleave", ".strp-container", this._onMouseLeaveHandler = $.proxy(this._onMouseLeave, this)).on("mouseenter", ".strp-container", this._onMouseEnterHandler = $.proxy(this._onMouseEnter, this)), 
            this.element.on("mouseenter", ".strp-nav", this._onNavMouseEnterHandler = $.proxy(this._onNavMouseEnter, this)).on("mouseleave", ".strp-nav", this._onNavMouseLeaveHandler = $.proxy(this._onNavMouseLeave, this)), 
            $(window).on("scroll", this._onScrollHandler = $.proxy(this._onScroll, this))), 
            this._pages.on("click", ".strp-container", this._onClickHandler = $.proxy(this._onClick, this));
        },
        unbindUI: function() {
            this._showUIHandler && (this.element.off("mouseenter", this._showUIHandler).off("mouseleave", this._hideUIHandler).off("mousemove", this._mousemoveUIHandler), 
            this._pages.off("mousemove", ".strp-container", this._onMouseMoveHandler).off("mouseleave", ".strp-container", this._onMouseLeaveHandler).off("mouseenter", ".strp-container", this._onMouseEnterHandler), 
            this.element.off("mouseenter", ".strp-nav", this._onNavMouseEnterHandler).off("mouseleave", ".strp-nav", this._onNavMouseLeaveHandler), 
            $(window).off("scroll", this._onScrollHandler), this._showUIHandler = null), this._onClickHandler && (this._pages.off("click", ".strp-container", this._onClickHandler), 
            this._onClickHandler = null);
        },
        _onScroll: function() {
            this._offsetLeft = this._outerWidth = null;
        },
        _onMouseMove: function(t) {
            var e = this._getEventSide(t), i = e.toLowerCase();
            this.element[(this["may" + e]() ? "add" : "remove") + "Class"]("strp-hovering-clickable"), 
            this._previous[("next" != i ? "add" : "remove") + "Class"]("strp-nav-previous-hover strp-nav-hover"), 
            this._next[("next" == i ? "add" : "remove") + "Class"]("strp-nav-next-hover strp-nav-hover");
        },
        _onMouseLeave: function() {
            this.element.removeClass("strp-hovering-clickable"), this._previous.removeClass("strp-nav-previous-hover").add(this._next.removeClass("strp-nav-next-hover")).removeClass("strp-nav-hover");
        },
        _onClick: function(t) {
            this[this._getEventSide(t).toLowerCase()](), this._onMouseMove(t);
        },
        _onMouseEnter: function(t) {
            this._onMouseMove(t);
        },
        _getEventSide: function(t) {
            var e = this._offsetLeft || this.element.offset().left, i = t.pageX - e;
            return .5 * (this._outerWidth || this.element.outerWidth()) > i ? "Previous" : "Next";
        },
        _onNavMouseEnter: function() {
            this._hoveringNav = !0, this.clearUITimer();
        },
        _onNavMouseLeave: function() {
            this._hoveringNav = !1, this.startUITimer();
        },
        showUI: function(t, e) {
            this.clearUITimer();
            var i = this.element.find(".strp-nav-button"), n = this.view ? this.view.options.effects.ui.show : 0;
            "number" == $.type(e) && (n = e), i.stop(!0).fadeTo(n, 1, "stripEaseInSine", $.proxy(function() {
                this.startUITimer(), "function" == $.type(t) && t();
            }, this));
        },
        hideUI: function(t, e) {
            var i = this.element.find(".strp-nav-button"), n = this.view ? this.view.options.effects.ui.hide : 0;
            "number" == $.type(e) && (n = e), i.stop(!0).fadeOut(n, "stripEaseOutSine", function() {
                "function" == $.type(t) && t();
            });
        },
        clearUITimer: function() {
            Support.mobileTouch || this.timers.clear("ui");
        },
        startUITimer: function() {
            Support.mobileTouch || (this.clearUITimer(), this.timers.set("ui", $.proxy(function() {
                this.hideUI();
            }, this), this.view ? this.view.options.uiDelay : 0));
        }
    }, Keyboard = {
        enabled: !1,
        keyCode: {
            left: 37,
            right: 39,
            esc: 27
        },
        enable: function(t) {
            this.disable(), t && ($(document).on("keydown", this._onKeyDownHandler = $.proxy(this.onKeyDown, this)).on("keyup", this._onKeyUpHandler = $.proxy(this.onKeyUp, this)), 
            this.enabled = t);
        },
        disable: function() {
            this.enabled = !1, this._onKeyUpHandler && ($(document).off("keyup", this._onKeyUpHandler).off("keydown", this._onKeyDownHandler), 
            this._onKeyUpHandler = this._onKeyDownHandler = null);
        },
        onKeyDown: function(t) {
            if (this.enabled && Window.visible) {
                var e = this.getKeyByKeyCode(t.keyCode);
                if (e && (!e || !this.enabled || this.enabled[e])) switch (t.preventDefault(), t.stopPropagation(), 
                e) {
                  case "left":
                    Window.previous();
                    break;

                  case "right":
                    Window.next();
                }
            }
        },
        onKeyUp: function(t) {
            if (this.enabled && Window.visible) {
                var e = this.getKeyByKeyCode(t.keyCode);
                if (e && (!e || !this.enabled || this.enabled[e])) switch (e) {
                  case "esc":
                    Window.hide();
                }
            }
        },
        getKeyByKeyCode: function(t) {
            for (var e in this.keyCode) if (this.keyCode[e] == t) return e;
            return null;
        }
    }, _Strip = {
        _disabled: !1,
        _fallback: !0,
        initialize: function() {
            Window.initialize(), this._disabled || this.startDelegating();
        },
        startDelegating: function() {
            this.stopDelegating(), $(document.documentElement).on("click", ".strip[href]", this._delegateHandler = $.proxy(this.delegate, this));
        },
        stopDelegating: function() {
            this._delegateHandler && ($(document.documentElement).off("click", ".strip[href]", this._delegateHandler), 
            this._delegateHandler = null);
        },
        delegate: function(t) {
            if (!this._disabled) {
                t.stopPropagation(), t.preventDefault();
                var e = t.currentTarget;
                _Strip.show(e);
            }
        },
        show: function(object) {
            if (this._disabled) this.showFallback.apply(_Strip, _slice.call(arguments)); else {
                var options = arguments[1] || {}, position = arguments[2];
                arguments[1] && "number" == $.type(arguments[1]) && (position = arguments[1], options = {});
                var views = [], object_type, isElement = object && 1 == object.nodeType;
                switch (object_type = $.type(object)) {
                  case "string":
                  case "object":
                    var view = new View(object, options), _dgo = "data-strip-group-options";
                    if (view.group) {
                        if (isElement) {
                            var elements = $('.strip[data-strip-group="' + $(object).data("strip-group") + '"]'), groupOptions = {};
                            elements.filter("[" + _dgo + "]").each(function(i, element) {
                                $.extend(groupOptions, eval("({" + ($(element).attr(_dgo) || "") + "})"));
                            }), elements.each(function(t, e) {
                                position || e != object || (position = t + 1), views.push(new View(e, $.extend({}, groupOptions, options)));
                            });
                        }
                    } else {
                        var groupOptions = {};
                        isElement && $(object).is("[" + _dgo + "]") && ($.extend(groupOptions, eval("({" + ($(object).attr(_dgo) || "") + "})")), 
                        view = new View(object, $.extend({}, groupOptions, options))), views.push(view);
                    }
                    break;

                  case "array":
                    $.each(object, function(t, e) {
                        var i = new View(e, options);
                        views.push(i);
                    });
                }
                (!position || 1 > position) && (position = 1), position > views.length && (position = views.length), 
                Window.unbindHideOnClickOutside();
                var positionInAPG;
                isElement && (positionInAPG = Pages.getPositionInActivePageGroup(object)) ? (positionInAPG == Window._position && Window.bindHideOnClickOutside(), 
                Window.setPosition(positionInAPG)) : Window.load(views, position);
            }
        },
        showFallback: function() {
            function t(e) {
                var i = $.type(e);
                if ("string" == i) n = e; else if ("array" == i && e[0]) n = t(e[0]); else if (_.isElement(e) && $(e).attr("href")) var n = $(e).attr("href"); else n = !!e.url && e.url;
                return n;
            }
            return function(e) {
                if (_Strip._fallback) {
                    var i = t(e);
                    i && (window.location.href = i);
                }
            };
        }()
    };
    return $.extend(Strip, {
        show: function() {
            return _Strip.show.apply(_Strip, _slice.call(arguments)), this;
        },
        hide: function() {
            return Window.hide(), this;
        },
        disable: function() {
            return _Strip.stopDelegating(), _Strip._disabled = !0, this;
        },
        enable: function() {
            return _Strip._disabled = !1, _Strip.startDelegating(), this;
        },
        fallback: function(t) {
            return _Strip._fallback = t, this;
        },
        setDefaultSkin: function(t) {
            return Options.defaults.skin = t, this;
        }
    }), (Browser.IE && Browser.IE < 7 || "number" == $.type(Browser.Android) && Browser.Android < 3 || Browser.MobileSafari && "number" == $.type(Browser.WebKit) && Browser.WebKit < 533.18) && (_Strip.show = _Strip.showFallback, 
    $.each("startDelegating stopDelegating initialize".split(" "), function(t, e) {
        _Strip[e] = function() {};
    }), Strip.hide = function() {
        return this;
    }), $(document).ready(function() {
        _Strip.initialize();
    }), Strip;
});